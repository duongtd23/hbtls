--> true 
open INV .
	op m : -> Msg .
	op s : -> Sys .
	red inv9(init, m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r19, r1), pqPubKeyEn(r20, r1), r21) \in nw(s)) = true .
	eq sign(r12) = sign(ca, owner(r12), pubKey(r12)) .
	eq m = ccsM(r1, r1, r2) .
	red inv9(s, m) implies inv9(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r19, r1), pqPubKeyEn(r20, r1), r21) \in nw(s)) = true .
	eq sign(r12) = sign(ca, owner(r12), pubKey(r12)) .
	eq (m = ccsM(r1, r1, r2)) = false .
	red inv9(s, m) implies inv9(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r19, r1), pqPubKeyEn(r20, r1), r21) \in nw(s)) = true .
	eq (sign(r12) = sign(ca, owner(r12), pubKey(r12))) = false .
	red inv9(s, m) implies inv9(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r19, r1), pqPubKeyEn(r20, r1), r21) \in nw(s)) = false .
	red inv9(s, m) implies inv9(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq (decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15)) = false .
	red inv9(s, m) implies inv9(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = false .
	red inv9(s, m) implies inv9(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = false .
	red inv9(s, m) implies inv9(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv9(s, m) implies inv9(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = false .
	red inv9(s, m) implies inv9(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = false .
	red inv9(s, m) implies inv9(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq decAsym?(r16, pubKey(r12)) = false .
	red inv9(s, m) implies inv9(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	eq ss(s, r1, r2, r5) = none .
	red inv9(s, m) implies inv9(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq m = ccsM(r1, r1, r2) .
	red inv9(s, m) implies inv9(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq (m = ccsM(r1, r1, r2)) = false .
	red inv9(s, m) implies inv9(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq (decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5))))) = false .
	red inv9(s, m) implies inv9(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = false .
	red inv9(s, m) implies inv9(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = false .
	red inv9(s, m) implies inv9(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv9(s, m) implies inv9(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = false .
	red inv9(s, m) implies inv9(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r9, r2, r1) \in nw(s)) = false .
	red inv9(s, m) implies inv9(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r19, r1), pqPubKeyEn(r20, r1), r21) \in nw(s)) = true .
	eq sign(r12) = sign(ca, owner(r12), pubKey(r12)) .
	eq m = cfM(r1, r1, r2, encFin(prf-ckey(prf-ms(pms(classicKey(r14, r19), pqKey(r15, r20, r17)), seedMs(r4, r8, clPubKeyEx(r19, r1), pqPubKeyEn(r20, r1))), seedHs(r4, r8)), prf-cfin(prf-ms(pms(classicKey(r14, r19), pqKey(r15, r20, r17)), seedMs(r4, r8, clPubKeyEx(r19, r1), pqPubKeyEn(r20, r1))), hFullHs(r1, r2, r3, r4, r5, r6, r8, r9, r10, r12, r14, r15, r16, clPubKeyEx(r19, r1), pqPubKeyEn(r20, r1))))) .
	red inv9(s, m) implies inv9(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r19, r1), pqPubKeyEn(r20, r1), r21) \in nw(s)) = true .
	eq sign(r12) = sign(ca, owner(r12), pubKey(r12)) .
	eq (m = cfM(r1, r1, r2, encFin(prf-ckey(prf-ms(pms(classicKey(r14, r19), pqKey(r15, r20, r17)), seedMs(r4, r8, clPubKeyEx(r19, r1), pqPubKeyEn(r20, r1))), seedHs(r4, r8)), prf-cfin(prf-ms(pms(classicKey(r14, r19), pqKey(r15, r20, r17)), seedMs(r4, r8, clPubKeyEx(r19, r1), pqPubKeyEn(r20, r1))), hFullHs(r1, r2, r3, r4, r5, r6, r8, r9, r10, r12, r14, r15, r16, clPubKeyEx(r19, r1), pqPubKeyEn(r20, r1)))))) = false .
	red inv9(s, m) implies inv9(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r19, r1), pqPubKeyEn(r20, r1), r21) \in nw(s)) = true .
	eq (sign(r12) = sign(ca, owner(r12), pubKey(r12))) = false .
	red inv9(s, m) implies inv9(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r19, r1), pqPubKeyEn(r20, r1), r21) \in nw(s)) = false .
	red inv9(s, m) implies inv9(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq (decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15)) = false .
	red inv9(s, m) implies inv9(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = false .
	red inv9(s, m) implies inv9(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = false .
	red inv9(s, m) implies inv9(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv9(s, m) implies inv9(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = false .
	red inv9(s, m) implies inv9(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = false .
	red inv9(s, m) implies inv9(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = false .
	red inv9(s, m) implies inv9(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq decAsym?(r16, pubKey(r12)) = false .
	red inv9(s, m) implies inv9(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	eq ss(s, r1, r2, r5) = none .
	red inv9(s, m) implies inv9(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq m = cf2M(r1, r1, r2, encFin(prf-ckey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8)), prf-cfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))))) .
	red inv9(s, m) implies inv9(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq (m = cf2M(r1, r1, r2, encFin(prf-ckey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8)), prf-cfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5))))))) = false .
	red inv9(s, m) implies inv9(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq (decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5))))) = false .
	red inv9(s, m) implies inv9(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = false .
	red inv9(s, m) implies inv9(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = false .
	red inv9(s, m) implies inv9(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv9(s, m) implies inv9(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = false .
	red inv9(s, m) implies inv9(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = false .
	red inv9(s, m) implies inv9(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = false .
	red inv9(s, m) implies inv9(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	eq (r4 \in ur(s)) = true .
	red inv9(s, m) implies inv9(chello(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	eq (r4 \in ur(s)) = false .
	eq m = chM(r1, r1, r2, r3, r4, r5, r6) .
	red inv9(s, m) implies inv9(chello(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	eq (r4 \in ur(s)) = false .
	eq (m = chM(r1, r1, r2, r3, r4, r5, r6)) = false .
	red inv9(s, m) implies inv9(chello(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	eq ss(s, r1, r2, r5) = none .
	red inv9(s, m) implies inv9(chello2(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (r4 \in ur(s)) = true .
	red inv9(s, m) implies inv9(chello2(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (r4 \in ur(s)) = false .
	eq (cs(ss(s, r1, r2, r5)) \in r6) = true .
	eq m = ch2M(r1, r1, r2, r3, r4, r5, r6) .
	red inv9(s, m) implies inv9(chello2(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (r4 \in ur(s)) = false .
	eq (cs(ss(s, r1, r2, r5)) \in r6) = true .
	eq (m = ch2M(r1, r1, r2, r3, r4, r5, r6)) = false .
	red inv9(s, m) implies inv9(chello2(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (r4 \in ur(s)) = false .
	eq (cs(ss(s, r1, r2, r5)) \in r6) = false .
	red inv9(s, m) implies inv9(chello2(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = true .
	red inv9(s, m) implies inv9(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = true .
	red inv9(s, m) implies inv9(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r20, r4, r3) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6, r7, r8) \in nw(s)) = true .
	eq (shM(r9, r4, r3, r5, r10, r11, r12) \in nw(s)) = true .
	eq (skexM(r15, r4, r3, r16, r17, r18, r19) \in nw(s)) = true .
	eq decH(r18, pubKey(r14)) = hParams(r6, r10, r16, r17) .
	eq sign(r14) = sign(ca, owner(r14), pubKey(r14)) .
	eq m = ckexM(r3, r3, r4, clPubKeyEx(r1, r3), pqPubKeyEn(r2, r3), time(s)) .
	red inv9(s, m) implies inv9(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r20, r4, r3) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6, r7, r8) \in nw(s)) = true .
	eq (shM(r9, r4, r3, r5, r10, r11, r12) \in nw(s)) = true .
	eq (skexM(r15, r4, r3, r16, r17, r18, r19) \in nw(s)) = true .
	eq decH(r18, pubKey(r14)) = hParams(r6, r10, r16, r17) .
	eq sign(r14) = sign(ca, owner(r14), pubKey(r14)) .
	eq (m = ckexM(r3, r3, r4, clPubKeyEx(r1, r3), pqPubKeyEn(r2, r3), time(s))) = false .
	red inv9(s, m) implies inv9(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r20, r4, r3) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6, r7, r8) \in nw(s)) = true .
	eq (shM(r9, r4, r3, r5, r10, r11, r12) \in nw(s)) = true .
	eq (skexM(r15, r4, r3, r16, r17, r18, r19) \in nw(s)) = true .
	eq decH(r18, pubKey(r14)) = hParams(r6, r10, r16, r17) .
	eq (sign(r14) = sign(ca, owner(r14), pubKey(r14))) = false .
	red inv9(s, m) implies inv9(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r20, r4, r3) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6, r7, r8) \in nw(s)) = true .
	eq (shM(r9, r4, r3, r5, r10, r11, r12) \in nw(s)) = true .
	eq (skexM(r15, r4, r3, r16, r17, r18, r19) \in nw(s)) = true .
	eq (decH(r18, pubKey(r14)) = hParams(r6, r10, r16, r17)) = false .
	red inv9(s, m) implies inv9(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r20, r4, r3) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6, r7, r8) \in nw(s)) = true .
	eq (shM(r9, r4, r3, r5, r10, r11, r12) \in nw(s)) = true .
	eq (skexM(r15, r4, r3, r16, r17, r18, r19) \in nw(s)) = false .
	red inv9(s, m) implies inv9(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r20, r4, r3) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6, r7, r8) \in nw(s)) = true .
	eq (shM(r9, r4, r3, r5, r10, r11, r12) \in nw(s)) = false .
	red inv9(s, m) implies inv9(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r20, r4, r3) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6, r7, r8) \in nw(s)) = false .
	red inv9(s, m) implies inv9(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r20, r4, r3) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = false .
	red inv9(s, m) implies inv9(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r20, r4, r3) \in nw(s)) = false .
	red inv9(s, m) implies inv9(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	eq decAsym?(r18, pubKey(r14)) = false .
	red inv9(s, m) implies inv9(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = true .
	eq m = scertM(intruder, r1, r2, cert(r1, r3, r4)) .
	red inv9(s, m) implies inv9(fkCert(s, r1, r2, r3, r4), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = true .
	eq (m = scertM(intruder, r1, r2, cert(r1, r3, r4))) = false .
	red inv9(s, m) implies inv9(fkCert(s, r1, r2, r3, r4), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	eq (r4 \in csign(nw(s))) = false .
	red inv9(s, m) implies inv9(fkCert(s, r1, r2, r3, r4), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq m = cf2M(intruder, r1, r2, r3) .
	red inv9(s, m) implies inv9(fkCfinish2a(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq (m = cf2M(intruder, r1, r2, r3)) = false .
	red inv9(s, m) implies inv9(fkCfinish2a(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin2(nw(s))) = false .
	red inv9(s, m) implies inv9(fkCfinish2a(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq m = cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(r8, seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(r8, seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) .
	red inv9(s, m) implies inv9(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (m = cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(r8, seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(r8, seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9))))) = false .
	red inv9(s, m) implies inv9(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq m = cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(r8, seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(r8, seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) .
	red inv9(s, m) implies inv9(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (m = cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(r8, seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(r8, seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9))))) = false .
	red inv9(s, m) implies inv9(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq m = cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(r8, seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(r8, seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) .
	red inv9(s, m) implies inv9(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (m = cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(r8, seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(r8, seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9))))) = false .
	red inv9(s, m) implies inv9(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq m = cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(r8, seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(r8, seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) .
	red inv9(s, m) implies inv9(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (m = cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(r8, seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(r8, seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9))))) = false .
	red inv9(s, m) implies inv9(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = true .
	eq m = cfM(intruder, r1, r2, r3) .
	red inv9(s, m) implies inv9(fkCfinisha(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = true .
	eq (m = cfM(intruder, r1, r2, r3)) = false .
	red inv9(s, m) implies inv9(fkCfinisha(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cecfin(nw(s))) = false .
	red inv9(s, m) implies inv9(fkCfinisha(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq m = cfM(intruder, r4, r5, encFin(prf-ckey(prf-ms(r1, seedMs(r7, r10, r15, r16)), seedHs(r7, r10)), prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (m = cfM(intruder, r4, r5, encFin(prf-ckey(prf-ms(r1, seedMs(r7, r10, r15, r16)), seedHs(r7, r10)), prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq m = cfM(intruder, r4, r5, encFin(prf-ckey(prf-ms(r1, seedMs(r7, r10, r15, r16)), seedHs(r7, r10)), prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (m = cfM(intruder, r4, r5, encFin(prf-ckey(prf-ms(r1, seedMs(r7, r10, r15, r16)), seedHs(r7, r10)), prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq m = cfM(intruder, r4, r5, encFin(prf-ckey(prf-ms(r1, seedMs(r7, r10, r15, r16)), seedHs(r7, r10)), prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq (m = cfM(intruder, r4, r5, encFin(prf-ckey(prf-ms(r1, seedMs(r7, r10, r15, r16)), seedHs(r7, r10)), prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq m = cfM(intruder, r4, r5, encFin(prf-ckey(prf-ms(r1, seedMs(r7, r10, r15, r16)), seedHs(r7, r10)), prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq (m = cfM(intruder, r4, r5, encFin(prf-ckey(prf-ms(r1, seedMs(r7, r10, r15, r16)), seedHs(r7, r10)), prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = false .
	red inv9(s, m) implies inv9(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq (m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq (m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq (m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq (m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq (m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq (m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq (m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq (m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq (m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq (m = cfM(intruder, r4, r5, encFin(r17, prf-cfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = false .
	red inv9(s, m) implies inv9(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	eq m = ccsM(intruder, r1, r2) .
	red inv9(s, m) implies inv9(fkChangeCS(s, r1, r2), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	eq (m = ccsM(intruder, r1, r2)) = false .
	red inv9(s, m) implies inv9(fkChangeCS(s, r1, r2), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	eq m = chM(intruder, r1, r2, r3, r4, r5, r6) .
	red inv9(s, m) implies inv9(fkChello(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	eq (m = chM(intruder, r1, r2, r3, r4, r5, r6)) = false .
	red inv9(s, m) implies inv9(fkChello(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	eq m = ch2M(intruder, r1, r2, r3, r4, r5, r6) .
	red inv9(s, m) implies inv9(fkChello2(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	eq (m = ch2M(intruder, r1, r2, r3, r4, r5, r6)) = false .
	red inv9(s, m) implies inv9(fkChello2(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op s : -> Sys .
	eq (priClKey(r3) \in uclk(s)) = true .
	red inv9(s, m) implies inv9(fkCkeyex(s, r1, r2, r3, r4), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op s : -> Sys .
	eq (priClKey(r3) \in uclk(s)) = false .
	eq (priPqKey(r4) \in upqk(s)) = true .
	red inv9(s, m) implies inv9(fkCkeyex(s, r1, r2, r3, r4), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op s : -> Sys .
	eq (priClKey(r3) \in uclk(s)) = false .
	eq (priPqKey(r4) \in upqk(s)) = false .
	eq m = ckexM(intruder, r1, r2, r3, r4, time(s)) .
	red inv9(s, m) implies inv9(fkCkeyex(s, r1, r2, r3, r4), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op s : -> Sys .
	eq (priClKey(r3) \in uclk(s)) = false .
	eq (priPqKey(r4) \in upqk(s)) = false .
	eq (m = ckexM(intruder, r1, r2, r3, r4, time(s))) = false .
	red inv9(s, m) implies inv9(fkCkeyex(s, r1, r2, r3, r4), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op s : -> Sys .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq m = ckexM(intruder, r1, r2, clPubKeyEx(r3, intruder), pqPubKeyEn(r4, intruder), time(s)) .
	eq (r3 \in uclk(s)) = true .
	eq (r4 \in upqk(s)) = true .
	red inv9(s, m) implies inv9(fkCkeyex2(s, r1, r2, r3, r4), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op s : -> Sys .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq m = ckexM(intruder, r1, r2, clPubKeyEx(r3, intruder), pqPubKeyEn(r4, intruder), time(s)) .
	eq (r3 \in uclk(s)) = true .
	eq (r4 \in upqk(s)) = false .
	eq (ckexM(intruder, r1, r2, clPubKeyEx(r3, intruder), pqPubKeyEn(r4, intruder), time(s)) \in nw(s)) = true .
	red inv9(s, m) implies inv9(fkCkeyex2(s, r1, r2, r3, r4), m) .
close

--> true, use inv6 as a lemma 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op s : -> Sys .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq m = ckexM(intruder, r1, r2, clPubKeyEx(r3, intruder), pqPubKeyEn(r4, intruder), time(s)) .
	eq (r3 \in uclk(s)) = true .
	eq (r4 \in upqk(s)) = false .
	eq (ckexM(intruder, r1, r2, clPubKeyEx(r3, intruder), pqPubKeyEn(r4, intruder), time(s)) \in nw(s)) = false .
	red inv6(s, r4) implies inv9(s, m) implies inv9(fkCkeyex2(s, r1, r2, r3, r4), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op s : -> Sys .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq m = ckexM(intruder, r1, r2, clPubKeyEx(r3, intruder), pqPubKeyEn(r4, intruder), time(s)) .
	eq (r3 \in uclk(s)) = false .
	eq (ckexM(intruder, r1, r2, clPubKeyEx(r3, intruder), pqPubKeyEn(r4, intruder), time(s)) \in nw(s)) = true .
	red inv9(s, m) implies inv9(fkCkeyex2(s, r1, r2, r3, r4), m) .
close

--> true, use inv5 as a lemma 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op s : -> Sys .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq m = ckexM(intruder, r1, r2, clPubKeyEx(r3, intruder), pqPubKeyEn(r4, intruder), time(s)) .
	eq (r3 \in uclk(s)) = false .
	eq (ckexM(intruder, r1, r2, clPubKeyEx(r3, intruder), pqPubKeyEn(r4, intruder), time(s)) \in nw(s)) = false .
	red inv5(s, r3) implies inv9(s, m) implies inv9(fkCkeyex2(s, r1, r2, r3, r4), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op s : -> Sys .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq (m = ckexM(intruder, r1, r2, clPubKeyEx(r3, intruder), pqPubKeyEn(r4, intruder), time(s))) = false .
	red inv9(s, m) implies inv9(fkCkeyex2(s, r1, r2, r3, r4), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op s : -> Sys .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCkeyex2(s, r1, r2, r3, r4), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op s : -> Sys .
	eq (r3 \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkCkeyex2(s, r1, r2, r3, r4), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = true .
	eq m = sf2M(intruder, r1, r2, r3) .
	red inv9(s, m) implies inv9(fkSfinish2a(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = true .
	eq (m = sf2M(intruder, r1, r2, r3)) = false .
	red inv9(s, m) implies inv9(fkSfinish2a(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin2(nw(s))) = false .
	red inv9(s, m) implies inv9(fkSfinish2a(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq m = sf2M(intruder, r1, r2, encFin(prf-skey(prf-ms(r8, seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-sfin2(prf-ms(r8, seedMs(r4, r7, r10, r11)), hAbbrHs(r2, r1, r3, r4, r5, r6, r7, r9)))) .
	red inv9(s, m) implies inv9(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (m = sf2M(intruder, r1, r2, encFin(prf-skey(prf-ms(r8, seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-sfin2(prf-ms(r8, seedMs(r4, r7, r10, r11)), hAbbrHs(r2, r1, r3, r4, r5, r6, r7, r9))))) = false .
	red inv9(s, m) implies inv9(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq m = sf2M(intruder, r1, r2, encFin(prf-skey(prf-ms(r8, seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-sfin2(prf-ms(r8, seedMs(r4, r7, r10, r11)), hAbbrHs(r2, r1, r3, r4, r5, r6, r7, r9)))) .
	red inv9(s, m) implies inv9(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (m = sf2M(intruder, r1, r2, encFin(prf-skey(prf-ms(r8, seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-sfin2(prf-ms(r8, seedMs(r4, r7, r10, r11)), hAbbrHs(r2, r1, r3, r4, r5, r6, r7, r9))))) = false .
	red inv9(s, m) implies inv9(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq m = sf2M(intruder, r1, r2, encFin(prf-skey(prf-ms(r8, seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-sfin2(prf-ms(r8, seedMs(r4, r7, r10, r11)), hAbbrHs(r2, r1, r3, r4, r5, r6, r7, r9)))) .
	red inv9(s, m) implies inv9(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (m = sf2M(intruder, r1, r2, encFin(prf-skey(prf-ms(r8, seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-sfin2(prf-ms(r8, seedMs(r4, r7, r10, r11)), hAbbrHs(r2, r1, r3, r4, r5, r6, r7, r9))))) = false .
	red inv9(s, m) implies inv9(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq m = sf2M(intruder, r1, r2, encFin(prf-skey(prf-ms(r8, seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-sfin2(prf-ms(r8, seedMs(r4, r7, r10, r11)), hAbbrHs(r2, r1, r3, r4, r5, r6, r7, r9)))) .
	red inv9(s, m) implies inv9(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (m = sf2M(intruder, r1, r2, encFin(prf-skey(prf-ms(r8, seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-sfin2(prf-ms(r8, seedMs(r4, r7, r10, r11)), hAbbrHs(r2, r1, r3, r4, r5, r6, r7, r9))))) = false .
	red inv9(s, m) implies inv9(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq m = sfM(intruder, r1, r2, r3) .
	red inv9(s, m) implies inv9(fkSfinisha(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = true .
	eq (m = sfM(intruder, r1, r2, r3)) = false .
	red inv9(s, m) implies inv9(fkSfinisha(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	eq (r3 \in cesfin(nw(s))) = false .
	red inv9(s, m) implies inv9(fkSfinisha(s, r1, r2, r3), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq m = sfM(intruder, r5, r4, encFin(prf-skey(prf-ms(r1, seedMs(r7, r10, r15, r16)), seedHs(r7, r10)), prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (m = sfM(intruder, r5, r4, encFin(prf-skey(prf-ms(r1, seedMs(r7, r10, r15, r16)), seedHs(r7, r10)), prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq m = sfM(intruder, r5, r4, encFin(prf-skey(prf-ms(r1, seedMs(r7, r10, r15, r16)), seedHs(r7, r10)), prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (m = sfM(intruder, r5, r4, encFin(prf-skey(prf-ms(r1, seedMs(r7, r10, r15, r16)), seedHs(r7, r10)), prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq m = sfM(intruder, r5, r4, encFin(prf-skey(prf-ms(r1, seedMs(r7, r10, r15, r16)), seedHs(r7, r10)), prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq (m = sfM(intruder, r5, r4, encFin(prf-skey(prf-ms(r1, seedMs(r7, r10, r15, r16)), seedHs(r7, r10)), prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq m = sfM(intruder, r5, r4, encFin(prf-skey(prf-ms(r1, seedMs(r7, r10, r15, r16)), seedHs(r7, r10)), prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq (m = sfM(intruder, r5, r4, encFin(prf-skey(prf-ms(r1, seedMs(r7, r10, r15, r16)), seedHs(r7, r10)), prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r3 \in csign(nw(s))) = false .
	red inv9(s, m) implies inv9(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq (m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq (m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq (m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq (m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq (m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq (m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq (m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq (m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq (m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16)))) .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	eq (m = sfM(intruder, r5, r4, encFin(r17, prf-sfin(prf-ms(r1, seedMs(r7, r10, r15, r16)), hFullHs(r4, r5, r6, r7, r8, r9, r10, r11, r12, cert(r5, r2, r3), r13, r14, encH(priKey(intruder), hParams(r7, r10, r13, r14)), r15, r16))))) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = false .
	red inv9(s, m) implies inv9(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuite .
	op r6 : -> Sid .
	op s : -> Sys .
	eq m = shM(intruder, r1, r2, r3, r4, r5, r6) .
	red inv9(s, m) implies inv9(fkShello(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuite .
	op r6 : -> Sid .
	op s : -> Sys .
	eq (m = shM(intruder, r1, r2, r3, r4, r5, r6)) = false .
	red inv9(s, m) implies inv9(fkShello(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuite .
	op s : -> Sys .
	eq m = sh2M(intruder, r1, r2, r3, r4, r5, r6) .
	red inv9(s, m) implies inv9(fkShello2(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuite .
	op s : -> Sys .
	eq (m = sh2M(intruder, r1, r2, r3, r4, r5, r6)) = false .
	red inv9(s, m) implies inv9(fkShello2(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	eq m = shDnM(intruder, r1, r2) .
	red inv9(s, m) implies inv9(fkShelloDone(s, r1, r2), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	eq (m = shDnM(intruder, r1, r2)) = false .
	red inv9(s, m) implies inv9(fkShelloDone(s, r1, r2), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (priClKey(r3) \in uclk(s)) = true .
	red inv9(s, m) implies inv9(fkSkeyex(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (priClKey(r3) \in uclk(s)) = false .
	eq (priPqKey(r4) \in upqk(s)) = true .
	red inv9(s, m) implies inv9(fkSkeyex(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (priClKey(r3) \in uclk(s)) = false .
	eq (priPqKey(r4) \in upqk(s)) = false .
	eq m = skexM(intruder, r1, r2, r3, r4, encH(priKey(r1), hParams(r5, r6, r3, r4)), time(s)) .
	red inv9(s, m) implies inv9(fkSkeyex(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (priClKey(r3) \in uclk(s)) = false .
	eq (priPqKey(r4) \in upqk(s)) = false .
	eq (m = skexM(intruder, r1, r2, r3, r4, encH(priKey(r1), hParams(r5, r6, r3, r4)), time(s))) = false .
	red inv9(s, m) implies inv9(fkSkeyex(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSkeyex(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq m = skexM(intruder, r1, r2, clPubKeyEx(r3, r1), pqPubKeyEn(r4, r1), encH(priKey(intruder), hParams(r5, r6, clPubKeyEx(r3, intruder), pqPubKeyEn(r4, intruder))), time(s)) .
	eq (r3 \in uclk(s)) = true .
	eq (r4 \in upqk(s)) = true .
	red inv9(s, m) implies inv9(fkSkeyex2(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq m = skexM(intruder, r1, r2, clPubKeyEx(r3, r1), pqPubKeyEn(r4, r1), encH(priKey(intruder), hParams(r5, r6, clPubKeyEx(r3, intruder), pqPubKeyEn(r4, intruder))), time(s)) .
	eq (r3 \in uclk(s)) = true .
	eq (r4 \in upqk(s)) = false .
	eq (skexM(intruder, r1, r2, clPubKeyEx(r3, r1), pqPubKeyEn(r4, r1), encH(priKey(intruder), hParams(r5, r6, clPubKeyEx(r3, intruder), pqPubKeyEn(r4, intruder))), time(s)) \in nw(s)) = true .
	red inv9(s, m) implies inv9(fkSkeyex2(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true, use inv6 as a lemma 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq m = skexM(intruder, r1, r2, clPubKeyEx(r3, r1), pqPubKeyEn(r4, r1), encH(priKey(intruder), hParams(r5, r6, clPubKeyEx(r3, intruder), pqPubKeyEn(r4, intruder))), time(s)) .
	eq (r3 \in uclk(s)) = true .
	eq (r4 \in upqk(s)) = false .
	eq (skexM(intruder, r1, r2, clPubKeyEx(r3, r1), pqPubKeyEn(r4, r1), encH(priKey(intruder), hParams(r5, r6, clPubKeyEx(r3, intruder), pqPubKeyEn(r4, intruder))), time(s)) \in nw(s)) = false .
	red inv6(s, r4) implies inv9(s, m) implies inv9(fkSkeyex2(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq m = skexM(intruder, r1, r2, clPubKeyEx(r3, r1), pqPubKeyEn(r4, r1), encH(priKey(intruder), hParams(r5, r6, clPubKeyEx(r3, intruder), pqPubKeyEn(r4, intruder))), time(s)) .
	eq (r3 \in uclk(s)) = false .
	eq (skexM(intruder, r1, r2, clPubKeyEx(r3, r1), pqPubKeyEn(r4, r1), encH(priKey(intruder), hParams(r5, r6, clPubKeyEx(r3, intruder), pqPubKeyEn(r4, intruder))), time(s)) \in nw(s)) = true .
	red inv9(s, m) implies inv9(fkSkeyex2(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true, use inv5 as a lemma 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq m = skexM(intruder, r1, r2, clPubKeyEx(r3, r1), pqPubKeyEn(r4, r1), encH(priKey(intruder), hParams(r5, r6, clPubKeyEx(r3, intruder), pqPubKeyEn(r4, intruder))), time(s)) .
	eq (r3 \in uclk(s)) = false .
	eq (skexM(intruder, r1, r2, clPubKeyEx(r3, r1), pqPubKeyEn(r4, r1), encH(priKey(intruder), hParams(r5, r6, clPubKeyEx(r3, intruder), pqPubKeyEn(r4, intruder))), time(s)) \in nw(s)) = false .
	red inv5(s, r3) implies inv9(s, m) implies inv9(fkSkeyex2(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq (m = skexM(intruder, r1, r2, clPubKeyEx(r3, r1), pqPubKeyEn(r4, r1), encH(priKey(intruder), hParams(r5, r6, clPubKeyEx(r3, intruder), pqPubKeyEn(r4, intruder))), time(s))) = false .
	red inv9(s, m) implies inv9(fkSkeyex2(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSkeyex2(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	eq (r3 \in clkLeaked(s)) = false .
	red inv9(s, m) implies inv9(fkSkeyex2(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	eq m = heReM(r2, r2, r1) .
	red inv9(s, m) implies inv9(helloReq(s, r1, r2), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	eq (m = heReM(r2, r2, r1)) = false .
	red inv9(s, m) implies inv9(helloReq(s, r1, r2), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Key .
	op r4 : -> FinVD .
	op s : -> Sys .
	eq (cfM(r1, r1, r2, encFin(r3, r4)) \in nw(s)) = true .
	red inv9(s, m) implies inv9(leakHsK(s, r1, r2, r3, r4), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Key .
	op r4 : -> FinVD .
	op s : -> Sys .
	eq (cfM(r1, r1, r2, encFin(r3, r4)) \in nw(s)) = false .
	eq (sfM(r1, r1, r2, encFin(r3, r4)) \in nw(s)) = true .
	red inv9(s, m) implies inv9(leakHsK(s, r1, r2, r3, r4), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Key .
	op r4 : -> FinVD .
	op s : -> Sys .
	eq (cfM(r1, r1, r2, encFin(r3, r4)) \in nw(s)) = false .
	eq (sfM(r1, r1, r2, encFin(r3, r4)) \in nw(s)) = false .
	red inv9(s, m) implies inv9(leakHsK(s, r1, r2, r3, r4), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op s : -> Sys .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	red inv9(s, m) implies inv9(leakLtK(s, r1), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op s : -> Sys .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	red inv9(s, m) implies inv9(leakLtK(s, r1), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKeyEn .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	eq (skexM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	red inv9(s, m) implies inv9(leakPKE1(s, r1, r2, r3, r4, r5, r6, r7), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKeyEn .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	eq (skexM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv9(s, m) implies inv9(leakPKE1(s, r1, r2, r3, r4, r5, r6, r7), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKeyEn .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	eq (skexM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	red inv9(s, m) implies inv9(leakPKE2(s, r1, r2, r3, r4, r5, r6, r7), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKeyEn .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	eq (skexM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv9(s, m) implies inv9(leakPKE2(s, r1, r2, r3, r4, r5, r6, r7), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKeyEn .
	op r6 : -> Nat .
	op s : -> Sys .
	eq (ckexM(r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	red inv9(s, m) implies inv9(leakPKE3(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKeyEn .
	op r6 : -> Nat .
	op s : -> Sys .
	eq (ckexM(r1, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv9(s, m) implies inv9(leakPKE3(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKeyEn .
	op r6 : -> Nat .
	op s : -> Sys .
	eq (ckexM(r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	red inv9(s, m) implies inv9(leakPKE4(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKeyEn .
	op r6 : -> Nat .
	op s : -> Sys .
	eq (ckexM(r1, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv9(s, m) implies inv9(leakPKE4(s, r1, r2, r3, r4, r5, r6), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = true .
	eq decFin(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = prf-cfin(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), hFullHs(r2, r3, r4, r5, r6, r7, r8, r9, r10, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r15, r16)) .
	eq m = ccsM(r3, r3, r2) .
	red inv9(s, m) implies inv9(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = true .
	eq decFin(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = prf-cfin(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), hFullHs(r2, r3, r4, r5, r6, r7, r8, r9, r10, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r15, r16)) .
	eq (m = ccsM(r3, r3, r2)) = false .
	red inv9(s, m) implies inv9(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = true .
	eq (decFin(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = prf-cfin(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), hFullHs(r2, r3, r4, r5, r6, r7, r8, r9, r10, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r15, r16))) = false .
	red inv9(s, m) implies inv9(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = false .
	red inv9(s, m) implies inv9(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = false .
	red inv9(s, m) implies inv9(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = false .
	red inv9(s, m) implies inv9(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = false .
	red inv9(s, m) implies inv9(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv9(s, m) implies inv9(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = false .
	red inv9(s, m) implies inv9(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = false .
	red inv9(s, m) implies inv9(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (shDnM(r3, r3, r2) \in nw(s)) = false .
	red inv9(s, m) implies inv9(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	eq ss(s, r2, r3, r6) = none .
	red inv9(s, m) implies inv9(sChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	eq (ss(s, r2, r3, r6) = none) = false .
	eq (ch2M(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (sh2M(r3, r3, r2, r4, r8, r6, cs(ss(s, r2, r3, r6))) \in nw(s)) = true .
	eq m = ccsM(r3, r3, r2) .
	red inv9(s, m) implies inv9(sChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	eq (ss(s, r2, r3, r6) = none) = false .
	eq (ch2M(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (sh2M(r3, r3, r2, r4, r8, r6, cs(ss(s, r2, r3, r6))) \in nw(s)) = true .
	eq (m = ccsM(r3, r3, r2)) = false .
	red inv9(s, m) implies inv9(sChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	eq (ss(s, r2, r3, r6) = none) = false .
	eq (ch2M(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (sh2M(r3, r3, r2, r4, r8, r6, cs(ss(s, r2, r3, r6))) \in nw(s)) = false .
	red inv9(s, m) implies inv9(sChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	eq (ss(s, r2, r3, r6) = none) = false .
	eq (ch2M(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv9(s, m) implies inv9(sChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq m = scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) .
	red inv9(s, m) implies inv9(scert(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (m = scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))))) = false .
	red inv9(s, m) implies inv9(scert(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = false .
	red inv9(s, m) implies inv9(scert(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv9(s, m) implies inv9(scert(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = true .
	eq decFin(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = prf-cfin(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), hFullHs(r2, r3, r4, r5, r6, r7, r8, r9, r10, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r15, r16)) .
	eq m = sfM(r3, r3, r2, encFin(prf-skey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8)), prf-sfin(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), hFullHs(r2, r3, r4, r5, r6, r7, r8, r9, r10, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r15, r16)))) .
	red inv9(s, m) implies inv9(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = true .
	eq decFin(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = prf-cfin(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), hFullHs(r2, r3, r4, r5, r6, r7, r8, r9, r10, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r15, r16)) .
	eq (m = sfM(r3, r3, r2, encFin(prf-skey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8)), prf-sfin(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), hFullHs(r2, r3, r4, r5, r6, r7, r8, r9, r10, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r15, r16))))) = false .
	red inv9(s, m) implies inv9(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = true .
	eq (decFin(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = prf-cfin(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), hFullHs(r2, r3, r4, r5, r6, r7, r8, r9, r10, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r15, r16))) = false .
	red inv9(s, m) implies inv9(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = false .
	red inv9(s, m) implies inv9(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = false .
	red inv9(s, m) implies inv9(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = false .
	red inv9(s, m) implies inv9(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = false .
	red inv9(s, m) implies inv9(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv9(s, m) implies inv9(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = false .
	red inv9(s, m) implies inv9(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = false .
	red inv9(s, m) implies inv9(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = false .
	red inv9(s, m) implies inv9(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (ccsM(r3, r3, r2) \in nw(s)) = false .
	red inv9(s, m) implies inv9(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	eq ss(s, r2, r3, r6) = none .
	red inv9(s, m) implies inv9(sfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	eq (ss(s, r2, r3, r6) = none) = false .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (ch2M(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (sh2M(r3, r3, r2, r4, r8, r6, cs(ss(s, r2, r3, r6))) \in nw(s)) = true .
	eq m = sf2M(r3, r3, r2, encFin(prf-skey(ms(ss(s, r2, r3, r6)), seedHs(r5, r8)), prf-sfin2(ms(ss(s, r2, r3, r6)), hAbbrHs(r2, r3, r4, r5, r6, r7, r8, cs(ss(s, r2, r3, r6)))))) .
	red inv9(s, m) implies inv9(sfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	eq (ss(s, r2, r3, r6) = none) = false .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (ch2M(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (sh2M(r3, r3, r2, r4, r8, r6, cs(ss(s, r2, r3, r6))) \in nw(s)) = true .
	eq (m = sf2M(r3, r3, r2, encFin(prf-skey(ms(ss(s, r2, r3, r6)), seedHs(r5, r8)), prf-sfin2(ms(ss(s, r2, r3, r6)), hAbbrHs(r2, r3, r4, r5, r6, r7, r8, cs(ss(s, r2, r3, r6))))))) = false .
	red inv9(s, m) implies inv9(sfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	eq (ss(s, r2, r3, r6) = none) = false .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (ch2M(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (sh2M(r3, r3, r2, r4, r8, r6, cs(ss(s, r2, r3, r6))) \in nw(s)) = false .
	red inv9(s, m) implies inv9(sfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	eq (ss(s, r2, r3, r6) = none) = false .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (ch2M(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv9(s, m) implies inv9(sfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	eq (ss(s, r2, r3, r6) = none) = false .
	eq (ccsM(r3, r3, r2) \in nw(s)) = false .
	red inv9(s, m) implies inv9(sfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = true .
	red inv9(s, m) implies inv9(shello(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = true .
	red inv9(s, m) implies inv9(shello(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = false .
	eq (chM(r4, r5, r6, r7, r8, r9, r10) \in nw(s)) = true .
	eq m = shM(r6, r6, r5, r7, r1, r2, r3) .
	red inv9(s, m) implies inv9(shello(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = false .
	eq (chM(r4, r5, r6, r7, r8, r9, r10) \in nw(s)) = true .
	eq (m = shM(r6, r6, r5, r7, r1, r2, r3)) = false .
	red inv9(s, m) implies inv9(shello(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = false .
	eq (chM(r4, r5, r6, r7, r8, r9, r10) \in nw(s)) = false .
	red inv9(s, m) implies inv9(shello(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	eq (r2 \in r9) = false .
	red inv9(s, m) implies inv9(shello(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq ss(s, r3, r4, r7) = none .
	red inv9(s, m) implies inv9(shello2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r3, r4, r7) = none) = false .
	eq (r1 \in ur(s)) = true .
	red inv9(s, m) implies inv9(shello2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r3, r4, r7) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s, r3, r4, r7)) \in r8) = true .
	eq (ch2M(r2, r3, r4, r5, r6, r7, r8) \in nw(s)) = true .
	eq m = sh2M(r4, r4, r3, r5, r1, r7, cs(ss(s, r3, r4, r7))) .
	red inv9(s, m) implies inv9(shello2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r3, r4, r7) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s, r3, r4, r7)) \in r8) = true .
	eq (ch2M(r2, r3, r4, r5, r6, r7, r8) \in nw(s)) = true .
	eq (m = sh2M(r4, r4, r3, r5, r1, r7, cs(ss(s, r3, r4, r7)))) = false .
	red inv9(s, m) implies inv9(shello2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r3, r4, r7) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s, r3, r4, r7)) \in r8) = true .
	eq (ch2M(r2, r3, r4, r5, r6, r7, r8) \in nw(s)) = false .
	red inv9(s, m) implies inv9(shello2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	eq (ss(s, r3, r4, r7) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s, r3, r4, r7)) \in r8) = false .
	red inv9(s, m) implies inv9(shello2(s, r1, r2, r3, r4, r5, r6, r7, r8), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = true .
	eq m = shDnM(r3, r3, r2) .
	red inv9(s, m) implies inv9(shelloDone(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = true .
	eq (m = shDnM(r3, r3, r2)) = false .
	red inv9(s, m) implies inv9(shelloDone(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = false .
	red inv9(s, m) implies inv9(shelloDone(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = false .
	red inv9(s, m) implies inv9(shelloDone(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = false .
	red inv9(s, m) implies inv9(shelloDone(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv9(s, m) implies inv9(shelloDone(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKeyEn .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r1 \in uclk(s)) = true .
	red inv9(s, m) implies inv9(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKeyEn .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = true .
	red inv9(s, m) implies inv9(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKeyEn .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3, r4, r5, r6, r7, r8, r9) \in nw(s)) = true .
	eq (shM(r5, r5, r4, r6, r10, r11, r12) \in nw(s)) = true .
	eq (scertM(r5, r5, r4, cert(r5, pubKey(r5), sign(ca, r5, pubKey(r5)))) \in nw(s)) = true .
	eq m = skexM(r5, r5, r4, clPubKeyEx(r1, r5), pqPubKeyEn(r2, r5), encH(priKey(r5), hParams(r7, r10, clPubKeyEx(r1, r5), pqPubKeyEn(r2, r5))), time(s)) .
	red inv9(s, m) implies inv9(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKeyEn .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3, r4, r5, r6, r7, r8, r9) \in nw(s)) = true .
	eq (shM(r5, r5, r4, r6, r10, r11, r12) \in nw(s)) = true .
	eq (scertM(r5, r5, r4, cert(r5, pubKey(r5), sign(ca, r5, pubKey(r5)))) \in nw(s)) = true .
	eq (m = skexM(r5, r5, r4, clPubKeyEx(r1, r5), pqPubKeyEn(r2, r5), encH(priKey(r5), hParams(r7, r10, clPubKeyEx(r1, r5), pqPubKeyEn(r2, r5))), time(s))) = false .
	red inv9(s, m) implies inv9(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKeyEn .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3, r4, r5, r6, r7, r8, r9) \in nw(s)) = true .
	eq (shM(r5, r5, r4, r6, r10, r11, r12) \in nw(s)) = true .
	eq (scertM(r5, r5, r4, cert(r5, pubKey(r5), sign(ca, r5, pubKey(r5)))) \in nw(s)) = false .
	red inv9(s, m) implies inv9(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKeyEn .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3, r4, r5, r6, r7, r8, r9) \in nw(s)) = true .
	eq (shM(r5, r5, r4, r6, r10, r11, r12) \in nw(s)) = false .
	red inv9(s, m) implies inv9(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> true 
open INV .
	op m : -> Msg .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKeyEn .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3, r4, r5, r6, r7, r8, r9) \in nw(s)) = false .
	red inv9(s, m) implies inv9(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), m) .
close

--> Time taken is 15751ms