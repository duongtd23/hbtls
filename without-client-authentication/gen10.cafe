--> true 
open INV .
	op s : -> Sys .
	op sk : -> PriKey .
	eq priKey(intruder) = sk .
	red inv10(init, sk) .
close

--> true 
open INV .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (priKey(intruder) = sk) = false .
	red inv10(init, sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r19, r1), pqPubKeyEn(r20, r1), r21) \in nw(s)) = true .
	eq sign(r12) = sign(ca, owner(r12), pubKey(r12)) .
	red inv10(s, sk) implies inv10(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r19, r1), pqPubKeyEn(r20, r1), r21) \in nw(s)) = true .
	eq (sign(r12) = sign(ca, owner(r12), pubKey(r12))) = false .
	red inv10(s, sk) implies inv10(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r19, r1), pqPubKeyEn(r20, r1), r21) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq (decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15)) = false .
	red inv10(s, sk) implies inv10(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r16, pubKey(r12)) = false .
	red inv10(s, sk) implies inv10(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq ss(s, r1, r2, r5) = none .
	red inv10(s, sk) implies inv10(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	red inv10(s, sk) implies inv10(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq (decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5))))) = false .
	red inv10(s, sk) implies inv10(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = false .
	red inv10(s, sk) implies inv10(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r9, r2, r1) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r19, r1), pqPubKeyEn(r20, r1), r21) \in nw(s)) = true .
	eq sign(r12) = sign(ca, owner(r12), pubKey(r12)) .
	red inv10(s, sk) implies inv10(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r19, r1), pqPubKeyEn(r20, r1), r21) \in nw(s)) = true .
	eq (sign(r12) = sign(ca, owner(r12), pubKey(r12))) = false .
	red inv10(s, sk) implies inv10(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r19, r1), pqPubKeyEn(r20, r1), r21) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq (decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15)) = false .
	red inv10(s, sk) implies inv10(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r18, r2, r1) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> ClPriKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPriKeyEn .
	op r21 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r16, pubKey(r12)) = false .
	red inv10(s, sk) implies inv10(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq ss(s, r1, r2, r5) = none .
	red inv10(s, sk) implies inv10(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	red inv10(s, sk) implies inv10(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq (decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5))))) = false .
	red inv10(s, sk) implies inv10(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = false .
	red inv10(s, sk) implies inv10(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r4 \in ur(s)) = true .
	red inv10(s, sk) implies inv10(chello(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r4 \in ur(s)) = false .
	red inv10(s, sk) implies inv10(chello(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sk : -> PriKey .
	eq ss(s, r1, r2, r5) = none .
	red inv10(s, sk) implies inv10(chello2(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (r4 \in ur(s)) = true .
	red inv10(s, sk) implies inv10(chello2(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (r4 \in ur(s)) = false .
	eq (cs(ss(s, r1, r2, r5)) \in r6) = true .
	red inv10(s, sk) implies inv10(chello2(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (r4 \in ur(s)) = false .
	eq (cs(ss(s, r1, r2, r5)) \in r6) = false .
	red inv10(s, sk) implies inv10(chello2(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = true .
	red inv10(s, sk) implies inv10(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), sk) .
close

--> true 
open INV .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = true .
	red inv10(s, sk) implies inv10(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), sk) .
close

--> true 
open INV .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r20, r4, r3) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6, r7, r8) \in nw(s)) = true .
	eq (shM(r9, r4, r3, r5, r10, r11, r12) \in nw(s)) = true .
	eq (skexM(r15, r4, r3, r16, r17, r18, r19) \in nw(s)) = true .
	eq decH(r18, pubKey(r14)) = hParams(r6, r10, r16, r17) .
	eq sign(r14) = sign(ca, owner(r14), pubKey(r14)) .
	eq (sk \in' ltkLeaked(s)) = true .
	eq (time(s) > timeLeak(sk, ltkLeaked(s))) = true .
	red inv10(s, sk) implies inv10(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), sk) .
close

--> true 
open INV .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r20, r4, r3) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6, r7, r8) \in nw(s)) = true .
	eq (shM(r9, r4, r3, r5, r10, r11, r12) \in nw(s)) = true .
	eq (skexM(r15, r4, r3, r16, r17, r18, r19) \in nw(s)) = true .
	eq decH(r18, pubKey(r14)) = hParams(r6, r10, r16, r17) .
	eq sign(r14) = sign(ca, owner(r14), pubKey(r14)) .
	eq (sk \in' ltkLeaked(s)) = true .
	eq (time(s) > timeLeak(sk, ltkLeaked(s))) = false .
	red inv10(s, sk) implies inv10(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), sk) .
close

--> true 
open INV .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r20, r4, r3) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6, r7, r8) \in nw(s)) = true .
	eq (shM(r9, r4, r3, r5, r10, r11, r12) \in nw(s)) = true .
	eq (skexM(r15, r4, r3, r16, r17, r18, r19) \in nw(s)) = true .
	eq decH(r18, pubKey(r14)) = hParams(r6, r10, r16, r17) .
	eq sign(r14) = sign(ca, owner(r14), pubKey(r14)) .
	eq (sk \in' ltkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), sk) .
close

--> true 
open INV .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r20, r4, r3) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6, r7, r8) \in nw(s)) = true .
	eq (shM(r9, r4, r3, r5, r10, r11, r12) \in nw(s)) = true .
	eq (skexM(r15, r4, r3, r16, r17, r18, r19) \in nw(s)) = true .
	eq decH(r18, pubKey(r14)) = hParams(r6, r10, r16, r17) .
	eq (sign(r14) = sign(ca, owner(r14), pubKey(r14))) = false .
	red inv10(s, sk) implies inv10(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), sk) .
close

--> true 
open INV .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r20, r4, r3) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6, r7, r8) \in nw(s)) = true .
	eq (shM(r9, r4, r3, r5, r10, r11, r12) \in nw(s)) = true .
	eq (skexM(r15, r4, r3, r16, r17, r18, r19) \in nw(s)) = true .
	eq (decH(r18, pubKey(r14)) = hParams(r6, r10, r16, r17)) = false .
	red inv10(s, sk) implies inv10(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), sk) .
close

--> true 
open INV .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r20, r4, r3) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6, r7, r8) \in nw(s)) = true .
	eq (shM(r9, r4, r3, r5, r10, r11, r12) \in nw(s)) = true .
	eq (skexM(r15, r4, r3, r16, r17, r18, r19) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), sk) .
close

--> true 
open INV .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r20, r4, r3) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6, r7, r8) \in nw(s)) = true .
	eq (shM(r9, r4, r3, r5, r10, r11, r12) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), sk) .
close

--> true 
open INV .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r20, r4, r3) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6, r7, r8) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), sk) .
close

--> true 
open INV .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r20, r4, r3) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), sk) .
close

--> true 
open INV .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r20, r4, r3) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), sk) .
close

--> true 
open INV .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq decAsym?(r18, pubKey(r14)) = false .
	red inv10(s, sk) implies inv10(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r4 \in csign(nw(s))) = true .
	red inv10(s, sk) implies inv10(fkCert(s, r1, r2, r3, r4), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r4 \in csign(nw(s))) = false .
	red inv10(s, sk) implies inv10(fkCert(s, r1, r2, r3, r4), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in cecfin2(nw(s))) = true .
	red inv10(s, sk) implies inv10(fkCfinish2a(s, r1, r2, r3), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in cecfin2(nw(s))) = false .
	red inv10(s, sk) implies inv10(fkCfinish2a(s, r1, r2, r3), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in cecfin(nw(s))) = true .
	red inv10(s, sk) implies inv10(fkCfinisha(s, r1, r2, r3), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in cecfin(nw(s))) = false .
	red inv10(s, sk) implies inv10(fkCfinisha(s, r1, r2, r3), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in csign(nw(s))) = false .
	red inv10(s, sk) implies inv10(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = false .
	red inv10(s, sk) implies inv10(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	red inv10(s, sk) implies inv10(fkChangeCS(s, r1, r2), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	red inv10(s, sk) implies inv10(fkChello(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sk : -> PriKey .
	red inv10(s, sk) implies inv10(fkChello2(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (priClKey(r3) \in uclk(s)) = true .
	red inv10(s, sk) implies inv10(fkCkeyex(s, r1, r2, r3, r4), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (priClKey(r3) \in uclk(s)) = false .
	eq (priPqKey(r4) \in upqk(s)) = true .
	red inv10(s, sk) implies inv10(fkCkeyex(s, r1, r2, r3, r4), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (priClKey(r3) \in uclk(s)) = false .
	eq (priPqKey(r4) \in upqk(s)) = false .
	eq (sk \in' ltkLeaked(s)) = true .
	eq (time(s) > timeLeak(sk, ltkLeaked(s))) = true .
	red inv10(s, sk) implies inv10(fkCkeyex(s, r1, r2, r3, r4), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (priClKey(r3) \in uclk(s)) = false .
	eq (priPqKey(r4) \in upqk(s)) = false .
	eq (sk \in' ltkLeaked(s)) = true .
	eq (time(s) > timeLeak(sk, ltkLeaked(s))) = false .
	red inv10(s, sk) implies inv10(fkCkeyex(s, r1, r2, r3, r4), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (priClKey(r3) \in uclk(s)) = false .
	eq (priPqKey(r4) \in upqk(s)) = false .
	eq (sk \in' ltkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCkeyex(s, r1, r2, r3, r4), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq (sk \in' ltkLeaked(s)) = true .
	eq (time(s) > timeLeak(sk, ltkLeaked(s))) = true .
	red inv10(s, sk) implies inv10(fkCkeyex2(s, r1, r2, r3, r4), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq (sk \in' ltkLeaked(s)) = true .
	eq (time(s) > timeLeak(sk, ltkLeaked(s))) = false .
	red inv10(s, sk) implies inv10(fkCkeyex2(s, r1, r2, r3, r4), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq (sk \in' ltkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCkeyex2(s, r1, r2, r3, r4), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCkeyex2(s, r1, r2, r3, r4), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkCkeyex2(s, r1, r2, r3, r4), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in cesfin2(nw(s))) = true .
	red inv10(s, sk) implies inv10(fkSfinish2a(s, r1, r2, r3), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in cesfin2(nw(s))) = false .
	red inv10(s, sk) implies inv10(fkSfinish2a(s, r1, r2, r3), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in cesfin(nw(s))) = true .
	red inv10(s, sk) implies inv10(fkSfinisha(s, r1, r2, r3), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in cesfin(nw(s))) = false .
	red inv10(s, sk) implies inv10(fkSfinisha(s, r1, r2, r3), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in csign(nw(s))) = false .
	red inv10(s, sk) implies inv10(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r17)))) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r17))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r17))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r17)))) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Pms .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPubKeyEx .
	op r14 : -> PqPubKeyEn .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Key .
	op r2 : -> PubKey .
	op r3 : -> Sign .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r17 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = false .
	red inv10(s, sk) implies inv10(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuite .
	op r6 : -> Sid .
	op s : -> Sys .
	op sk : -> PriKey .
	red inv10(s, sk) implies inv10(fkShello(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	red inv10(s, sk) implies inv10(fkShello2(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	red inv10(s, sk) implies inv10(fkShelloDone(s, r1, r2), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (priClKey(r3) \in uclk(s)) = true .
	red inv10(s, sk) implies inv10(fkSkeyex(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (priClKey(r3) \in uclk(s)) = false .
	eq (priPqKey(r4) \in upqk(s)) = true .
	red inv10(s, sk) implies inv10(fkSkeyex(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (priClKey(r3) \in uclk(s)) = false .
	eq (priPqKey(r4) \in upqk(s)) = false .
	eq (sk \in' ltkLeaked(s)) = true .
	eq (time(s) > timeLeak(sk, ltkLeaked(s))) = true .
	red inv10(s, sk) implies inv10(fkSkeyex(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (priClKey(r3) \in uclk(s)) = false .
	eq (priPqKey(r4) \in upqk(s)) = false .
	eq (sk \in' ltkLeaked(s)) = true .
	eq (time(s) > timeLeak(sk, ltkLeaked(s))) = false .
	red inv10(s, sk) implies inv10(fkSkeyex(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (priClKey(r3) \in uclk(s)) = false .
	eq (priPqKey(r4) \in upqk(s)) = false .
	eq (sk \in' ltkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSkeyex(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSkeyex(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq (sk \in' ltkLeaked(s)) = true .
	eq (time(s) > timeLeak(sk, ltkLeaked(s))) = true .
	red inv10(s, sk) implies inv10(fkSkeyex2(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq (sk \in' ltkLeaked(s)) = true .
	eq (time(s) > timeLeak(sk, ltkLeaked(s))) = false .
	red inv10(s, sk) implies inv10(fkSkeyex2(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	eq (sk \in' ltkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSkeyex2(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSkeyex2(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r3 \in clkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(fkSkeyex2(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	red inv10(s, sk) implies inv10(helloReq(s, r1, r2), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Key .
	op r4 : -> FinVD .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (cfM(r1, r1, r2, encFin(r3, r4)) \in nw(s)) = true .
	red inv10(s, sk) implies inv10(leakHsK(s, r1, r2, r3, r4), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Key .
	op r4 : -> FinVD .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (cfM(r1, r1, r2, encFin(r3, r4)) \in nw(s)) = false .
	eq (sfM(r1, r1, r2, encFin(r3, r4)) \in nw(s)) = true .
	red inv10(s, sk) implies inv10(leakHsK(s, r1, r2, r3, r4), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Key .
	op r4 : -> FinVD .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (cfM(r1, r1, r2, encFin(r3, r4)) \in nw(s)) = false .
	eq (sfM(r1, r1, r2, encFin(r3, r4)) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(leakHsK(s, r1, r2, r3, r4), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(leakLtK(s, r1), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq priKey(r1) = sk .
	eq (sk \in' ltkLeaked(s)) = true .
	red inv10(s, sk) implies inv10(leakLtK(s, r1), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq priKey(r1) = sk .
	eq (sk \in' ltkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(leakLtK(s, r1), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (priKey(r1) = sk) = false .
	eq (sk \in' ltkLeaked(s)) = true .
	eq (time(s) > timeLeak(sk, ltkLeaked(s))) = true .
	red inv10(s, sk) implies inv10(leakLtK(s, r1), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (priKey(r1) = sk) = false .
	eq (sk \in' ltkLeaked(s)) = true .
	eq (time(s) > timeLeak(sk, ltkLeaked(s))) = false .
	red inv10(s, sk) implies inv10(leakLtK(s, r1), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	eq (priKey(r1) = sk) = false .
	eq (sk \in' ltkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(leakLtK(s, r1), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKeyEn .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (skexM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	red inv10(s, sk) implies inv10(leakPKE1(s, r1, r2, r3, r4, r5, r6, r7), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKeyEn .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (skexM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(leakPKE1(s, r1, r2, r3, r4, r5, r6, r7), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKeyEn .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (skexM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	red inv10(s, sk) implies inv10(leakPKE2(s, r1, r2, r3, r4, r5, r6, r7), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKeyEn .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (skexM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(leakPKE2(s, r1, r2, r3, r4, r5, r6, r7), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKeyEn .
	op r6 : -> Nat .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ckexM(r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	red inv10(s, sk) implies inv10(leakPKE3(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKeyEn .
	op r6 : -> Nat .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ckexM(r1, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(leakPKE3(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKeyEn .
	op r6 : -> Nat .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ckexM(r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	red inv10(s, sk) implies inv10(leakPKE4(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKeyEn .
	op r6 : -> Nat .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ckexM(r1, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(leakPKE4(s, r1, r2, r3, r4, r5, r6), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = true .
	eq decFin(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = prf-cfin(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), hFullHs(r2, r3, r4, r5, r6, r7, r8, r9, r10, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r15, r16)) .
	red inv10(s, sk) implies inv10(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = true .
	eq (decFin(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = prf-cfin(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), hFullHs(r2, r3, r4, r5, r6, r7, r8, r9, r10, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r15, r16))) = false .
	red inv10(s, sk) implies inv10(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = false .
	red inv10(s, sk) implies inv10(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (shDnM(r3, r3, r2) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sk : -> PriKey .
	eq ss(s, r2, r3, r6) = none .
	red inv10(s, sk) implies inv10(sChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r2, r3, r6) = none) = false .
	eq (ch2M(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (sh2M(r3, r3, r2, r4, r8, r6, cs(ss(s, r2, r3, r6))) \in nw(s)) = true .
	red inv10(s, sk) implies inv10(sChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r2, r3, r6) = none) = false .
	eq (ch2M(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (sh2M(r3, r3, r2, r4, r8, r6, cs(ss(s, r2, r3, r6))) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(sChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r2, r3, r6) = none) = false .
	eq (ch2M(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(sChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	red inv10(s, sk) implies inv10(scert(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(scert(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(scert(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = true .
	eq decFin(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = prf-cfin(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), hFullHs(r2, r3, r4, r5, r6, r7, r8, r9, r10, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r15, r16)) .
	red inv10(s, sk) implies inv10(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = true .
	eq (decFin(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = prf-cfin(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), hFullHs(r2, r3, r4, r5, r6, r7, r8, r9, r10, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r15, r16))) = false .
	red inv10(s, sk) implies inv10(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r19, prf-ckey(prf-ms(pms(classicKey(r15, r11), pqKey(r16, r12, r13)), seedMs(r5, r8, r15, r16)), seedHs(r5, r8))) = false .
	red inv10(s, sk) implies inv10(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = true .
	eq (ckexM(r14, r2, r3, r15, r16, r17) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (cfM(r18, r2, r3, r19) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> Prin .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ccsM(r3, r3, r2) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sk : -> PriKey .
	eq ss(s, r2, r3, r6) = none .
	red inv10(s, sk) implies inv10(sfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r2, r3, r6) = none) = false .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (ch2M(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (sh2M(r3, r3, r2, r4, r8, r6, cs(ss(s, r2, r3, r6))) \in nw(s)) = true .
	red inv10(s, sk) implies inv10(sfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r2, r3, r6) = none) = false .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (ch2M(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (sh2M(r3, r3, r2, r4, r8, r6, cs(ss(s, r2, r3, r6))) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(sfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r2, r3, r6) = none) = false .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (ch2M(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(sfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r2, r3, r6) = none) = false .
	eq (ccsM(r3, r3, r2) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(sfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), sk) .
close

--> true 
open INV .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = true .
	red inv10(s, sk) implies inv10(shello(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), sk) .
close

--> true 
open INV .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = true .
	red inv10(s, sk) implies inv10(shello(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), sk) .
close

--> true 
open INV .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = false .
	eq (chM(r4, r5, r6, r7, r8, r9, r10) \in nw(s)) = true .
	red inv10(s, sk) implies inv10(shello(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), sk) .
close

--> true 
open INV .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = false .
	eq (chM(r4, r5, r6, r7, r8, r9, r10) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(shello(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), sk) .
close

--> true 
open INV .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r2 \in r9) = false .
	red inv10(s, sk) implies inv10(shello(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), sk) .
close

--> true 
open INV .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sk : -> PriKey .
	eq ss(s, r3, r4, r7) = none .
	red inv10(s, sk) implies inv10(shello2(s, r1, r2, r3, r4, r5, r6, r7, r8), sk) .
close

--> true 
open INV .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r3, r4, r7) = none) = false .
	eq (r1 \in ur(s)) = true .
	red inv10(s, sk) implies inv10(shello2(s, r1, r2, r3, r4, r5, r6, r7, r8), sk) .
close

--> true 
open INV .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r3, r4, r7) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s, r3, r4, r7)) \in r8) = true .
	eq (ch2M(r2, r3, r4, r5, r6, r7, r8) \in nw(s)) = true .
	red inv10(s, sk) implies inv10(shello2(s, r1, r2, r3, r4, r5, r6, r7, r8), sk) .
close

--> true 
open INV .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r3, r4, r7) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s, r3, r4, r7)) \in r8) = true .
	eq (ch2M(r2, r3, r4, r5, r6, r7, r8) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(shello2(s, r1, r2, r3, r4, r5, r6, r7, r8), sk) .
close

--> true 
open INV .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (ss(s, r3, r4, r7) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s, r3, r4, r7)) \in r8) = false .
	red inv10(s, sk) implies inv10(shello2(s, r1, r2, r3, r4, r5, r6, r7, r8), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = true .
	red inv10(s, sk) implies inv10(shelloDone(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(shelloDone(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(shelloDone(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(shelloDone(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13), sk) .
close

--> true 
open INV .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(shelloDone(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13), sk) .
close

--> true 
open INV .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKeyEn .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r1 \in uclk(s)) = true .
	red inv10(s, sk) implies inv10(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), sk) .
close

--> true 
open INV .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKeyEn .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = true .
	red inv10(s, sk) implies inv10(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), sk) .
close

--> true 
open INV .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKeyEn .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3, r4, r5, r6, r7, r8, r9) \in nw(s)) = true .
	eq (shM(r5, r5, r4, r6, r10, r11, r12) \in nw(s)) = true .
	eq (scertM(r5, r5, r4, cert(r5, pubKey(r5), sign(ca, r5, pubKey(r5)))) \in nw(s)) = true .
	eq (sk \in' ltkLeaked(s)) = true .
	eq (time(s) > timeLeak(sk, ltkLeaked(s))) = true .
	red inv10(s, sk) implies inv10(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), sk) .
close

--> true 
open INV .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKeyEn .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3, r4, r5, r6, r7, r8, r9) \in nw(s)) = true .
	eq (shM(r5, r5, r4, r6, r10, r11, r12) \in nw(s)) = true .
	eq (scertM(r5, r5, r4, cert(r5, pubKey(r5), sign(ca, r5, pubKey(r5)))) \in nw(s)) = true .
	eq (sk \in' ltkLeaked(s)) = true .
	eq (time(s) > timeLeak(sk, ltkLeaked(s))) = false .
	red inv10(s, sk) implies inv10(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), sk) .
close

--> true 
open INV .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKeyEn .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3, r4, r5, r6, r7, r8, r9) \in nw(s)) = true .
	eq (shM(r5, r5, r4, r6, r10, r11, r12) \in nw(s)) = true .
	eq (scertM(r5, r5, r4, cert(r5, pubKey(r5), sign(ca, r5, pubKey(r5)))) \in nw(s)) = true .
	eq (sk \in' ltkLeaked(s)) = false .
	red inv10(s, sk) implies inv10(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), sk) .
close

--> true 
open INV .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKeyEn .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3, r4, r5, r6, r7, r8, r9) \in nw(s)) = true .
	eq (shM(r5, r5, r4, r6, r10, r11, r12) \in nw(s)) = true .
	eq (scertM(r5, r5, r4, cert(r5, pubKey(r5), sign(ca, r5, pubKey(r5)))) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), sk) .
close

--> true 
open INV .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKeyEn .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3, r4, r5, r6, r7, r8, r9) \in nw(s)) = true .
	eq (shM(r5, r5, r4, r6, r10, r11, r12) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), sk) .
close

--> true 
open INV .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKeyEn .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sk : -> PriKey .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3, r4, r5, r6, r7, r8, r9) \in nw(s)) = false .
	red inv10(s, sk) implies inv10(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), sk) .
close

--> Time taken is 12371ms