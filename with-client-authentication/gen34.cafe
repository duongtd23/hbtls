--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	red inv34(init, a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r22, r1), pqPubKeyEn(r23, r1), r24) \in nw(s)) = true .
	eq sign(r12) = sign(ca, owner(r12), pubKey(r12)) .
	eq (ccertM(r1, r1, r2, cert(r1, pubKey(r1), sign(ca, r1, pubKey(r1)))) \in nw(s)) = true .
	eq (certVerM(r1, r1, r2, encH(priKey(r1), hFullHs(r1, r2, r3, r4, r5, r6, r8, r9, r10, r12, r14, r15, r16, r19, r20, cert(r1, pubKey(r1), sign(ca, r1, pubKey(r1))), clPubKeyEx(r22, r1), pqPubKeyEn(r23, r1))), r25) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r22, r1), pqPubKeyEn(r23, r1), r24) \in nw(s)) = true .
	eq sign(r12) = sign(ca, owner(r12), pubKey(r12)) .
	eq (ccertM(r1, r1, r2, cert(r1, pubKey(r1), sign(ca, r1, pubKey(r1)))) \in nw(s)) = true .
	eq (certVerM(r1, r1, r2, encH(priKey(r1), hFullHs(r1, r2, r3, r4, r5, r6, r8, r9, r10, r12, r14, r15, r16, r19, r20, cert(r1, pubKey(r1), sign(ca, r1, pubKey(r1))), clPubKeyEx(r22, r1), pqPubKeyEn(r23, r1))), r25) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r22, r1), pqPubKeyEn(r23, r1), r24) \in nw(s)) = true .
	eq sign(r12) = sign(ca, owner(r12), pubKey(r12)) .
	eq (ccertM(r1, r1, r2, cert(r1, pubKey(r1), sign(ca, r1, pubKey(r1)))) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r22, r1), pqPubKeyEn(r23, r1), r24) \in nw(s)) = true .
	eq (sign(r12) = sign(ca, owner(r12), pubKey(r12))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r22, r1), pqPubKeyEn(r23, r1), r24) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq (decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq ss(s, r1, r2, r5) = none .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq (decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5))))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r9, r2, r1) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq sign(r12) = sign(ca, owner(r12), pubKey(r12)) .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(ccert(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (sign(r12) = sign(ca, owner(r12), pubKey(r12))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(ccert(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq (decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(ccert(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(ccert(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(ccert(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(ccert(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(ccert(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(ccert(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(ccert(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(ccert(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> CertTypes .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPriKeyEx .
	op r14 : -> PqPriKeyEn .
	op r15 : -> Nat .
	op r2 : -> SignAlgs .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (chM(r3, r4, r5, r6, r7, r8, r9) \in nw(s)) = true .
	eq (shM(r5, r5, r4, r6, r10, r11, r12) \in nw(s)) = true .
	eq (scertM(r5, r5, r4, cert(r5, pubKey(r5), sign(ca, r5, pubKey(r5)))) \in nw(s)) = true .
	eq (skexM(r5, r5, r4, clPubKeyEx(r13, r5), pqPubKeyEn(r14, r5), encH(priKey(r5), hParams(r7, r10, clPubKeyEx(r13, r5), pqPubKeyEn(r14, r5))), r15) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(certReq(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> CertTypes .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPriKeyEx .
	op r14 : -> PqPriKeyEn .
	op r15 : -> Nat .
	op r2 : -> SignAlgs .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (chM(r3, r4, r5, r6, r7, r8, r9) \in nw(s)) = true .
	eq (shM(r5, r5, r4, r6, r10, r11, r12) \in nw(s)) = true .
	eq (scertM(r5, r5, r4, cert(r5, pubKey(r5), sign(ca, r5, pubKey(r5)))) \in nw(s)) = true .
	eq (skexM(r5, r5, r4, clPubKeyEx(r13, r5), pqPubKeyEn(r14, r5), encH(priKey(r5), hParams(r7, r10, clPubKeyEx(r13, r5), pqPubKeyEn(r14, r5))), r15) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(certReq(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> CertTypes .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPriKeyEx .
	op r14 : -> PqPriKeyEn .
	op r15 : -> Nat .
	op r2 : -> SignAlgs .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (chM(r3, r4, r5, r6, r7, r8, r9) \in nw(s)) = true .
	eq (shM(r5, r5, r4, r6, r10, r11, r12) \in nw(s)) = true .
	eq (scertM(r5, r5, r4, cert(r5, pubKey(r5), sign(ca, r5, pubKey(r5)))) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(certReq(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> CertTypes .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPriKeyEx .
	op r14 : -> PqPriKeyEn .
	op r15 : -> Nat .
	op r2 : -> SignAlgs .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (chM(r3, r4, r5, r6, r7, r8, r9) \in nw(s)) = true .
	eq (shM(r5, r5, r4, r6, r10, r11, r12) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(certReq(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> CertTypes .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> ClPriKeyEx .
	op r14 : -> PqPriKeyEn .
	op r15 : -> Nat .
	op r2 : -> SignAlgs .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (chM(r3, r4, r5, r6, r7, r8, r9) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(certReq(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r22, r1), pqPubKeyEn(r23, r1), r24) \in nw(s)) = true .
	eq sign(r12) = sign(ca, owner(r12), pubKey(r12)) .
	eq (ccertM(r1, r1, r2, cert(r1, pubKey(r1), sign(ca, r1, pubKey(r1)))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(certVerify(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r22, r1), pqPubKeyEn(r23, r1), r24) \in nw(s)) = true .
	eq sign(r12) = sign(ca, owner(r12), pubKey(r12)) .
	eq (ccertM(r1, r1, r2, cert(r1, pubKey(r1), sign(ca, r1, pubKey(r1)))) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(certVerify(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r22, r1), pqPubKeyEn(r23, r1), r24) \in nw(s)) = true .
	eq (sign(r12) = sign(ca, owner(r12), pubKey(r12))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(certVerify(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r22, r1), pqPubKeyEn(r23, r1), r24) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(certVerify(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq (decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(certVerify(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(certVerify(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(certVerify(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(certVerify(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(certVerify(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(certVerify(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(certVerify(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(certVerify(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r22, r1), pqPubKeyEn(r23, r1), r24) \in nw(s)) = true .
	eq sign(r12) = sign(ca, owner(r12), pubKey(r12)) .
	eq (ccertM(r1, r1, r2, cert(r1, pubKey(r1), sign(ca, r1, pubKey(r1)))) \in nw(s)) = true .
	eq (certVerM(r1, r1, r2, encH(priKey(r1), hFullHs(r1, r2, r3, r4, r5, r6, r8, r9, r10, r12, r14, r15, r16, r19, r20, cert(r1, pubKey(r1), sign(ca, r1, pubKey(r1))), clPubKeyEx(r22, r1), pqPubKeyEn(r23, r1))), r25) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r22, r1), pqPubKeyEn(r23, r1), r24) \in nw(s)) = true .
	eq sign(r12) = sign(ca, owner(r12), pubKey(r12)) .
	eq (ccertM(r1, r1, r2, cert(r1, pubKey(r1), sign(ca, r1, pubKey(r1)))) \in nw(s)) = true .
	eq (certVerM(r1, r1, r2, encH(priKey(r1), hFullHs(r1, r2, r3, r4, r5, r6, r8, r9, r10, r12, r14, r15, r16, r19, r20, cert(r1, pubKey(r1), sign(ca, r1, pubKey(r1))), clPubKeyEx(r22, r1), pqPubKeyEn(r23, r1))), r25) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r22, r1), pqPubKeyEn(r23, r1), r24) \in nw(s)) = true .
	eq sign(r12) = sign(ca, owner(r12), pubKey(r12)) .
	eq (ccertM(r1, r1, r2, cert(r1, pubKey(r1), sign(ca, r1, pubKey(r1)))) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r22, r1), pqPubKeyEn(r23, r1), r24) \in nw(s)) = true .
	eq (sign(r12) = sign(ca, owner(r12), pubKey(r12))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15) .
	eq (ckexM(r1, r1, r2, clPubKeyEx(r22, r1), pqPubKeyEn(r23, r1), r24) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = true .
	eq (decH(r16, pubKey(r12)) = hParams(r4, r8, r14, r15)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = true .
	eq (skexM(r13, r2, r1, r14, r15, r16, r17) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (shM(r7, r2, r1, r3, r8, r9, r10) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = true .
	eq (chM(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = true .
	eq (scertM(r11, r2, r1, r12) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = true .
	eq (certReqM(r18, r2, r1, r19, r20) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (shDnM(r21, r2, r1) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = true .
	eq (ccsM(r1, r1, r2) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> Prin .
	op r12 : -> Cert .
	op r13 : -> Prin .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> Cipher .
	op r17 : -> Nat .
	op r18 : -> Prin .
	op r19 : -> CertTypes .
	op r2 : -> Prin .
	op r20 : -> SignAlgs .
	op r21 : -> Prin .
	op r22 : -> ClPriKeyEx .
	op r23 : -> PqPriKeyEn .
	op r24 : -> Nat .
	op r25 : -> Nat .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r16, pubKey(r12)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq ss(s, r1, r2, r5) = none .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq r1 = intruder .
	eq ss(s, intruder, r2, r5) = none .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq r1 = intruder .
	eq (ss(s, intruder, r2, r5) = none) = false .
	eq (ccsM(intruder, intruder, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, intruder) \in nw(s)) = true .
	eq (sf2M(r10, r2, intruder, r11) \in nw(s)) = true .
	eq (ch2M(intruder, intruder, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, intruder, r3, r8, r5, cs(ss(s, intruder, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, intruder, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, intruder, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, intruder, r2, r5)), hAbbrHs(intruder, r2, r3, r4, r5, r6, r8, cs(ss(s, intruder, r2, r5)))) .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq r1 = intruder .
	eq (ss(s, intruder, r2, r5) = none) = false .
	eq (ccsM(intruder, intruder, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, intruder) \in nw(s)) = true .
	eq (sf2M(r10, r2, intruder, r11) \in nw(s)) = true .
	eq (ch2M(intruder, intruder, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, intruder, r3, r8, r5, cs(ss(s, intruder, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, intruder, r2, r5)), seedHs(r4, r8))) = true .
	eq (decFin(r11, prf-skey(ms(ss(s, intruder, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, intruder, r2, r5)), hAbbrHs(intruder, r2, r3, r4, r5, r6, r8, cs(ss(s, intruder, r2, r5))))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq r1 = intruder .
	eq (ss(s, intruder, r2, r5) = none) = false .
	eq (ccsM(intruder, intruder, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, intruder) \in nw(s)) = true .
	eq (sf2M(r10, r2, intruder, r11) \in nw(s)) = true .
	eq (ch2M(intruder, intruder, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, intruder, r3, r8, r5, cs(ss(s, intruder, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, intruder, r2, r5)), seedHs(r4, r8))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq r1 = intruder .
	eq (ss(s, intruder, r2, r5) = none) = false .
	eq (ccsM(intruder, intruder, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, intruder) \in nw(s)) = true .
	eq (sf2M(r10, r2, intruder, r11) \in nw(s)) = true .
	eq (ch2M(intruder, intruder, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, intruder, r3, r8, r5, cs(ss(s, intruder, r2, r5))) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq r1 = intruder .
	eq (ss(s, intruder, r2, r5) = none) = false .
	eq (ccsM(intruder, intruder, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, intruder) \in nw(s)) = true .
	eq (sf2M(r10, r2, intruder, r11) \in nw(s)) = true .
	eq (ch2M(intruder, intruder, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq r1 = intruder .
	eq (ss(s, intruder, r2, r5) = none) = false .
	eq (ccsM(intruder, intruder, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, intruder) \in nw(s)) = true .
	eq (sf2M(r10, r2, intruder, r11) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq r1 = intruder .
	eq (ss(s, intruder, r2, r5) = none) = false .
	eq (ccsM(intruder, intruder, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, intruder) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq r1 = intruder .
	eq (ss(s, intruder, r2, r5) = none) = false .
	eq (ccsM(intruder, intruder, r2) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	eq ss(s, r1, intruder, r5) = none .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	eq (ss(s, r1, intruder, r5) = none) = false .
	eq (ccsM(r1, r1, intruder) \in nw(s)) = true .
	eq (ccsM(r9, intruder, r1) \in nw(s)) = true .
	eq (sf2M(r10, intruder, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, intruder, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, intruder, r1, r3, r8, r5, cs(ss(s, r1, intruder, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, intruder, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, intruder, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, intruder, r5)), hAbbrHs(r1, intruder, r3, r4, r5, r6, r8, cs(ss(s, r1, intruder, r5)))) .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	eq (ss(s, r1, intruder, r5) = none) = false .
	eq (ccsM(r1, r1, intruder) \in nw(s)) = true .
	eq (ccsM(r9, intruder, r1) \in nw(s)) = true .
	eq (sf2M(r10, intruder, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, intruder, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, intruder, r1, r3, r8, r5, cs(ss(s, r1, intruder, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, intruder, r5)), seedHs(r4, r8))) = true .
	eq (decFin(r11, prf-skey(ms(ss(s, r1, intruder, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, intruder, r5)), hAbbrHs(r1, intruder, r3, r4, r5, r6, r8, cs(ss(s, r1, intruder, r5))))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	eq (ss(s, r1, intruder, r5) = none) = false .
	eq (ccsM(r1, r1, intruder) \in nw(s)) = true .
	eq (ccsM(r9, intruder, r1) \in nw(s)) = true .
	eq (sf2M(r10, intruder, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, intruder, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, intruder, r1, r3, r8, r5, cs(ss(s, r1, intruder, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, intruder, r5)), seedHs(r4, r8))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	eq (ss(s, r1, intruder, r5) = none) = false .
	eq (ccsM(r1, r1, intruder) \in nw(s)) = true .
	eq (ccsM(r9, intruder, r1) \in nw(s)) = true .
	eq (sf2M(r10, intruder, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, intruder, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, intruder, r1, r3, r8, r5, cs(ss(s, r1, intruder, r5))) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	eq (ss(s, r1, intruder, r5) = none) = false .
	eq (ccsM(r1, r1, intruder) \in nw(s)) = true .
	eq (ccsM(r9, intruder, r1) \in nw(s)) = true .
	eq (sf2M(r10, intruder, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, intruder, r3, r4, r5, r6) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	eq (ss(s, r1, intruder, r5) = none) = false .
	eq (ccsM(r1, r1, intruder) \in nw(s)) = true .
	eq (ccsM(r9, intruder, r1) \in nw(s)) = true .
	eq (sf2M(r10, intruder, r1, r11) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	eq (ss(s, r1, intruder, r5) = none) = false .
	eq (ccsM(r1, r1, intruder) \in nw(s)) = true .
	eq (ccsM(r9, intruder, r1) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	eq (ss(s, r1, intruder, r5) = none) = false .
	eq (ccsM(r1, r1, intruder) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	eq ss(s, r2, r2, r5) = none .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	eq (ss(s, r2, r2, r5) = none) = false .
	eq (ccsM(r2, r2, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r2) \in nw(s)) = true .
	eq (sf2M(r10, r2, r2, r11) \in nw(s)) = true .
	eq (ch2M(r2, r2, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r2, r3, r8, r5, cs(ss(s, r2, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r2, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r2, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r2, r2, r5)), hAbbrHs(r2, r2, r3, r4, r5, r6, r8, cs(ss(s, r2, r2, r5)))) .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	eq (ss(s, r2, r2, r5) = none) = false .
	eq (ccsM(r2, r2, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r2) \in nw(s)) = true .
	eq (sf2M(r10, r2, r2, r11) \in nw(s)) = true .
	eq (ch2M(r2, r2, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r2, r3, r8, r5, cs(ss(s, r2, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r2, r2, r5)), seedHs(r4, r8))) = true .
	eq (decFin(r11, prf-skey(ms(ss(s, r2, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r2, r2, r5)), hAbbrHs(r2, r2, r3, r4, r5, r6, r8, cs(ss(s, r2, r2, r5))))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	eq (ss(s, r2, r2, r5) = none) = false .
	eq (ccsM(r2, r2, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r2) \in nw(s)) = true .
	eq (sf2M(r10, r2, r2, r11) \in nw(s)) = true .
	eq (ch2M(r2, r2, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r2, r3, r8, r5, cs(ss(s, r2, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r2, r2, r5)), seedHs(r4, r8))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	eq (ss(s, r2, r2, r5) = none) = false .
	eq (ccsM(r2, r2, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r2) \in nw(s)) = true .
	eq (sf2M(r10, r2, r2, r11) \in nw(s)) = true .
	eq (ch2M(r2, r2, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r2, r3, r8, r5, cs(ss(s, r2, r2, r5))) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	eq (ss(s, r2, r2, r5) = none) = false .
	eq (ccsM(r2, r2, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r2) \in nw(s)) = true .
	eq (sf2M(r10, r2, r2, r11) \in nw(s)) = true .
	eq (ch2M(r2, r2, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	eq (ss(s, r2, r2, r5) = none) = false .
	eq (ccsM(r2, r2, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r2) \in nw(s)) = true .
	eq (sf2M(r10, r2, r2, r11) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	eq (ss(s, r2, r2, r5) = none) = false .
	eq (ccsM(r2, r2, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r2) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	eq (ss(s, r2, r2, r5) = none) = false .
	eq (ccsM(r2, r2, r2) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5))) .
	eq sd2 = seedHs(r4, r8) .
	eq (k' \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5))) .
	eq sd2 = seedHs(r4, r8) .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5))) .
	eq sd2 = seedHs(r4, r8) .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = false .
	eq ms(ss(s, r1, r2, r5)) = prf-ms(pms(kc, pqKey(pk', k', n)), sd1) .
	eq decSym?(r11, prf-skey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), seedHs(r4, r8))) = prf-sfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq (cf2M(r1, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), seedHs(r4, r8)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true, use inv23 as a lemma 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5))) .
	eq sd2 = seedHs(r4, r8) .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = false .
	eq ms(ss(s, r1, r2, r5)) = prf-ms(pms(kc, pqKey(pk', k', n)), sd1) .
	eq decSym?(r11, prf-skey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), seedHs(r4, r8))) = prf-sfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq (cf2M(r1, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), seedHs(r4, r8)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))))) \in nw(s)) = false .
	red inv23(s, a, b, kc, pk', k', r5, sd1, n) implies inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5))) .
	eq sd2 = seedHs(r4, r8) .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = false .
	eq ms(ss(s, r1, r2, r5)) = prf-ms(pms(kc, pqKey(pk', k', n)), sd1) .
	eq decSym?(r11, prf-skey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), seedHs(r4, r8))) = true .
	eq (decFin(r11, prf-skey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), seedHs(r4, r8))) = prf-sfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5))))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5))) .
	eq sd2 = seedHs(r4, r8) .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = false .
	eq ms(ss(s, r1, r2, r5)) = prf-ms(pms(kc, pqKey(pk', k', n)), sd1) .
	eq decSym?(r11, prf-skey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), seedHs(r4, r8))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5))) .
	eq sd2 = seedHs(r4, r8) .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = false .
	eq (ms(ss(s, r1, r2, r5)) = prf-ms(pms(kc, pqKey(pk', k', n)), sd1)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5))) .
	eq sd2 = seedHs(r4, r8) .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k' \in upqk(s)) = false .
	eq ms(ss(s, r1, r2, r5)) = prf-ms(pms(kc, pqKey(pk', k', n)), sd1) .
	eq decSym?(r11, prf-skey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), seedHs(r4, r8))) = prf-sfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq (cf2M(r1, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), seedHs(r4, r8)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true, use inv23 as a lemma 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5))) .
	eq sd2 = seedHs(r4, r8) .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k' \in upqk(s)) = false .
	eq ms(ss(s, r1, r2, r5)) = prf-ms(pms(kc, pqKey(pk', k', n)), sd1) .
	eq decSym?(r11, prf-skey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), seedHs(r4, r8))) = prf-sfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq (cf2M(r1, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), seedHs(r4, r8)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))))) \in nw(s)) = false .
	red inv23(s, a, b, kc, pk', k', r5, sd1, n) implies inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5))) .
	eq sd2 = seedHs(r4, r8) .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k' \in upqk(s)) = false .
	eq ms(ss(s, r1, r2, r5)) = prf-ms(pms(kc, pqKey(pk', k', n)), sd1) .
	eq decSym?(r11, prf-skey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), seedHs(r4, r8))) = true .
	eq (decFin(r11, prf-skey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), seedHs(r4, r8))) = prf-sfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5))))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5))) .
	eq sd2 = seedHs(r4, r8) .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k' \in upqk(s)) = false .
	eq ms(ss(s, r1, r2, r5)) = prf-ms(pms(kc, pqKey(pk', k', n)), sd1) .
	eq decSym?(r11, prf-skey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), seedHs(r4, r8))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5))) .
	eq sd2 = seedHs(r4, r8) .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k' \in upqk(s)) = false .
	eq (ms(ss(s, r1, r2, r5)) = prf-ms(pms(kc, pqKey(pk', k', n)), sd1)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5))) .
	eq (sd2 = seedHs(r4, r8)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (h = hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq a1 = r1 .
	eq (b = r2) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq a = r1 .
	eq (a1 = r1) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5)))) .
	eq (a = r1) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = true .
	eq (decFin(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = prf-sfin2(ms(ss(s, r1, r2, r5)), hAbbrHs(r1, r2, r3, r4, r5, r6, r8, cs(ss(s, r1, r2, r5))))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = true .
	eq decSym?(r11, prf-skey(ms(ss(s, r1, r2, r5)), seedHs(r4, r8))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	eq (sh2M(r7, r2, r1, r3, r8, r5, cs(ss(s, r1, r2, r5))) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = true .
	eq (ch2M(r1, r1, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = true .
	eq (sf2M(r10, r2, r1, r11) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = true .
	eq (ccsM(r9, r2, r1) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Prin .
	op r11 : -> Cipher .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Prin .
	op r8 : -> Rand .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (ccsM(r1, r1, r2) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(cfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r4 \in ur(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(chello(s, r1, r2, r3, r4, r5, r6), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r4 \in ur(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(chello(s, r1, r2, r3, r4, r5, r6), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq ss(s, r1, r2, r5) = none .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(chello2(s, r1, r2, r3, r4, r5, r6), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (r4 \in ur(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(chello2(s, r1, r2, r3, r4, r5, r6), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (r4 \in ur(s)) = false .
	eq (cs(ss(s, r1, r2, r5)) \in r6) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(chello2(s, r1, r2, r3, r4, r5, r6), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r1, r2, r5) = none) = false .
	eq (r4 \in ur(s)) = false .
	eq (cs(ss(s, r1, r2, r5)) \in r6) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(chello2(s, r1, r2, r3, r4, r5, r6), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r21 : -> CertTypes .
	op r22 : -> SignAlgs .
	op r23 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r21 : -> CertTypes .
	op r22 : -> SignAlgs .
	op r23 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r21 : -> CertTypes .
	op r22 : -> SignAlgs .
	op r23 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r23, r4, r3) \in nw(s)) = true .
	eq (certReqM(r20, r4, r3, r21, r22) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6, r7, r8) \in nw(s)) = true .
	eq (shM(r9, r4, r3, r5, r10, r11, r12) \in nw(s)) = true .
	eq (skexM(r15, r4, r3, r16, r17, r18, r19) \in nw(s)) = true .
	eq decH(r18, pubKey(r14)) = hParams(r6, r10, r16, r17) .
	eq sign(r14) = sign(ca, owner(r14), pubKey(r14)) .
	eq (ccertM(r3, r3, r4, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r21 : -> CertTypes .
	op r22 : -> SignAlgs .
	op r23 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r23, r4, r3) \in nw(s)) = true .
	eq (certReqM(r20, r4, r3, r21, r22) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6, r7, r8) \in nw(s)) = true .
	eq (shM(r9, r4, r3, r5, r10, r11, r12) \in nw(s)) = true .
	eq (skexM(r15, r4, r3, r16, r17, r18, r19) \in nw(s)) = true .
	eq decH(r18, pubKey(r14)) = hParams(r6, r10, r16, r17) .
	eq sign(r14) = sign(ca, owner(r14), pubKey(r14)) .
	eq (ccertM(r3, r3, r4, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r21 : -> CertTypes .
	op r22 : -> SignAlgs .
	op r23 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r23, r4, r3) \in nw(s)) = true .
	eq (certReqM(r20, r4, r3, r21, r22) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6, r7, r8) \in nw(s)) = true .
	eq (shM(r9, r4, r3, r5, r10, r11, r12) \in nw(s)) = true .
	eq (skexM(r15, r4, r3, r16, r17, r18, r19) \in nw(s)) = true .
	eq decH(r18, pubKey(r14)) = hParams(r6, r10, r16, r17) .
	eq (sign(r14) = sign(ca, owner(r14), pubKey(r14))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r21 : -> CertTypes .
	op r22 : -> SignAlgs .
	op r23 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r23, r4, r3) \in nw(s)) = true .
	eq (certReqM(r20, r4, r3, r21, r22) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6, r7, r8) \in nw(s)) = true .
	eq (shM(r9, r4, r3, r5, r10, r11, r12) \in nw(s)) = true .
	eq (skexM(r15, r4, r3, r16, r17, r18, r19) \in nw(s)) = true .
	eq (decH(r18, pubKey(r14)) = hParams(r6, r10, r16, r17)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r21 : -> CertTypes .
	op r22 : -> SignAlgs .
	op r23 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r23, r4, r3) \in nw(s)) = true .
	eq (certReqM(r20, r4, r3, r21, r22) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6, r7, r8) \in nw(s)) = true .
	eq (shM(r9, r4, r3, r5, r10, r11, r12) \in nw(s)) = true .
	eq (skexM(r15, r4, r3, r16, r17, r18, r19) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r21 : -> CertTypes .
	op r22 : -> SignAlgs .
	op r23 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r23, r4, r3) \in nw(s)) = true .
	eq (certReqM(r20, r4, r3, r21, r22) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6, r7, r8) \in nw(s)) = true .
	eq (shM(r9, r4, r3, r5, r10, r11, r12) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r21 : -> CertTypes .
	op r22 : -> SignAlgs .
	op r23 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r23, r4, r3) \in nw(s)) = true .
	eq (certReqM(r20, r4, r3, r21, r22) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = true .
	eq (chM(r3, r3, r4, r5, r6, r7, r8) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r21 : -> CertTypes .
	op r22 : -> SignAlgs .
	op r23 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r23, r4, r3) \in nw(s)) = true .
	eq (certReqM(r20, r4, r3, r21, r22) \in nw(s)) = true .
	eq (scertM(r13, r4, r3, r14) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r21 : -> CertTypes .
	op r22 : -> SignAlgs .
	op r23 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r23, r4, r3) \in nw(s)) = true .
	eq (certReqM(r20, r4, r3, r21, r22) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r21 : -> CertTypes .
	op r22 : -> SignAlgs .
	op r23 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r18, pubKey(r14)) = true .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (shDnM(r23, r4, r3) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r13 : -> Prin .
	op r14 : -> Cert .
	op r15 : -> Prin .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> Cipher .
	op r19 : -> Nat .
	op r2 : -> PqPriKeyEn .
	op r20 : -> Prin .
	op r21 : -> CertTypes .
	op r22 : -> SignAlgs .
	op r23 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> CipherSuites .
	op r8 : -> PqKemParams .
	op r9 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r18, pubKey(r14)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(ckeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r4 \in csign(nw(s))) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCCert(s, r1, r2, r3, r4), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r4 \in csign(nw(s))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCCert(s, r1, r2, r3, r4), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r4 \in csign(nw(s))) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCert(s, r1, r2, r3, r4), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r4 \in csign(nw(s))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCert(s, r1, r2, r3, r4), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> CertTypes .
	op r4 : -> SignAlgs .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCertReq(s, r1, r2, r3, r4), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> PubKey .
	op r10 : -> PqKemParams .
	op r11 : -> Rand .
	op r12 : -> CipherSuite .
	op r13 : -> Sid .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> Sign .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in csign(nw(s))) = true .
	eq (r4 \in csign(nw(s))) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCertVerify(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> PubKey .
	op r10 : -> PqKemParams .
	op r11 : -> Rand .
	op r12 : -> CipherSuite .
	op r13 : -> Sid .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> Sign .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in csign(nw(s))) = true .
	eq (r4 \in csign(nw(s))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCertVerify(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> PubKey .
	op r10 : -> PqKemParams .
	op r11 : -> Rand .
	op r12 : -> CipherSuite .
	op r13 : -> Sid .
	op r14 : -> ClPubKeyEx .
	op r15 : -> PqPubKeyEn .
	op r16 : -> ClPubKeyEx .
	op r17 : -> PqPubKeyEn .
	op r18 : -> CertTypes .
	op r19 : -> SignAlgs .
	op r2 : -> Sign .
	op r3 : -> PubKey .
	op r4 : -> Sign .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in csign(nw(s))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCertVerify(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq r1 = intruder .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2a(s, r1, r2, r3), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2a(s, r1, r2, r3), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2a(s, r1, r2, r3), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r3 = encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), sd2), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), h)) .
	eq (encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), sd2), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), h)) \in cecfin2(nw(s))) = true .
	eq (k' \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2a(s, r1, r2, r3), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r3 = encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), sd2), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), h)) .
	eq (encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), sd2), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), h)) \in cecfin2(nw(s))) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2a(s, r1, r2, r3), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r3 = encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), sd2), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), h)) .
	eq (encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), sd2), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), h)) \in cecfin2(nw(s))) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), sd2), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), h))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2a(s, r1, r2, r3), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true, use inv35 as a lemma 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r3 = encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), sd2), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), h)) .
	eq (encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), sd2), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), h)) \in cecfin2(nw(s))) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), sd2), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), h))) \in nw(s)) = false .
	red inv35(s, kc, pk', k', sd1, sd2, h, n) implies inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2a(s, r1, r2, r3), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r3 = encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), sd2), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), h)) .
	eq (encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), sd2), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), h)) \in cecfin2(nw(s))) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k' \in upqk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), sd2), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), h))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2a(s, r1, r2, r3), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true, use inv35 as a lemma 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r3 = encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), sd2), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), h)) .
	eq (encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), sd2), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), h)) \in cecfin2(nw(s))) = true .
	eq (k' \in pqkLeaked(s)) = false .
	eq (k' \in upqk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), sd2), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), h))) \in nw(s)) = false .
	red inv35(s, kc, pk', k', sd1, sd2, h, n) implies inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2a(s, r1, r2, r3), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r3 = encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), sd2), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), h)) .
	eq (encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), sd2), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), h)) \in cecfin2(nw(s))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2a(s, r1, r2, r3), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (r3 = encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), sd2), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), sd1), h))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2a(s, r1, r2, r3), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq (b = r2) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2a(s, r1, r2, r3), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq a = r1 .
	eq (a1 = intruder) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2a(s, r1, r2, r3), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in cecfin2(nw(s))) = true .
	eq (a = r1) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2a(s, r1, r2, r3), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in cecfin2(nw(s))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2a(s, r1, r2, r3), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq r1 = intruder .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM(kc, nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true, use inv4 as a lemma 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = false .
	red inv4(s, kc) implies inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true, use inv8 as a lemma 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = false .
	red inv8(s, pk', k', n) implies inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq (sd2 = seedHs(r4, r7)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq (sd1 = seedMs(r4, r7, r10, r11)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq (h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true, use inv5 as a lemma 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = false .
	red inv5(s, clKeyPri(kc)) implies inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true, use inv8 as a lemma 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = false .
	red inv8(s, pk', k', n) implies inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq (sd2 = seedHs(r4, r7)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq (sd1 = seedMs(r4, r7, r10, r11)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq (h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (r8 = pms(kc, pqKey(pk', k', n))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq (b = r2) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq a = r1 .
	eq (a1 = intruder) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (a = r1) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq r1 = intruder .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM(kc, nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true, use inv4 as a lemma 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = false .
	red inv4(s, kc) implies inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true, use inv8 as a lemma 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = false .
	red inv8(s, pk', k', n) implies inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq (sd2 = seedHs(r4, r7)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq (sd1 = seedMs(r4, r7, r10, r11)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq (h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true, use inv5 as a lemma 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = false .
	red inv5(s, clKeyPri(kc)) implies inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true, use inv8 as a lemma 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = false .
	red inv8(s, pk', k', n) implies inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq (sd2 = seedHs(r4, r7)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq (sd1 = seedMs(r4, r7, r10, r11)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq (h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (r8 = pms(kc, pqKey(pk', k', n))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq (b = r2) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq a = r1 .
	eq (a1 = intruder) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (a = r1) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq r1 = intruder .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM(kc, nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true, use inv4 as a lemma 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = false .
	red inv4(s, kc) implies inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true, use inv8 as a lemma 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = false .
	red inv8(s, pk', k', n) implies inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq (sd2 = seedHs(r4, r7)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq (sd1 = seedMs(r4, r7, r10, r11)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq (h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true, use inv5 as a lemma 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = false .
	red inv5(s, clKeyPri(kc)) implies inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true, use inv8 as a lemma 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = false .
	red inv8(s, pk', k', n) implies inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq (sd2 = seedHs(r4, r7)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq (sd1 = seedMs(r4, r7, r10, r11)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq (h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (r8 = pms(kc, pqKey(pk', k', n))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq (b = r2) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq (a1 = intruder) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (a = r1) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq r1 = intruder .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq r2 = intruder .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq r1 = r2 .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM(kc, nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = true .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true, use inv4 as a lemma 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = false .
	red inv4(s, kc) implies inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true, use inv8 as a lemma 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = false .
	red inv8(s, pk', k', n) implies inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq (sd2 = seedHs(r4, r7)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq (sd1 = seedMs(r4, r7, r10, r11)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq (h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true, use inv5 as a lemma 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = true .
	eq (clKeyPri(kc) \in uclk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = false .
	red inv5(s, clKeyPri(kc)) implies inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true, use inv8 as a lemma 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq sd2 = seedHs(r4, r7) .
	eq (k' \in upqk(s)) = false .
	eq (cf2M(intruder, r1, r2, encFin(prf-ckey(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), seedHs(r4, r7)), prf-cfin2(prf-ms(pms(kc, pqKey(pk', k', n)), seedMs(r4, r7, r10, r11)), hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)))) \in nw(s)) = false .
	red inv8(s, pk', k', n) implies inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq sd1 = seedMs(r4, r7, r10, r11) .
	eq (sd2 = seedHs(r4, r7)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9) .
	eq (sd1 = seedMs(r4, r7, r10, r11)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = true .
	eq (h = hAbbrHs(r1, r2, r3, r4, r5, r6, r7, r9)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pqKey(pk', k', n), nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq r8 = pms(kc, pqKey(pk', k', n)) .
	eq (k' \in pqkLeaked(s)) = false .
	eq existClPriKexM(kc, nw(s)) = false .
	eq (clKeyPri(kc) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq b = r2 .
	eq (r1 = intruder) = false .
	eq (r2 = intruder) = false .
	eq (r1 = r2) = false .
	eq (r8 = pms(kc, pqKey(pk', k', n))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq a1 = intruder .
	eq (b = r2) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq a = r1 .
	eq (a1 = intruder) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	eq (a = r1) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in cecfin(nw(s))) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinisha(s, r1, r2, r3), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in cecfin(nw(s))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinisha(s, r1, r2, r3), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> CertTypes .
	op r2 : -> PubKey .
	op r20 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> CertTypes .
	op r2 : -> PubKey .
	op r20 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> CertTypes .
	op r2 : -> PubKey .
	op r20 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> CertTypes .
	op r2 : -> PubKey .
	op r20 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> CertTypes .
	op r2 : -> PubKey .
	op r20 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> CertTypes .
	op r2 : -> PubKey .
	op r20 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> CertTypes .
	op r2 : -> PubKey .
	op r20 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> CertTypes .
	op r2 : -> PubKey .
	op r20 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> CertTypes .
	op r2 : -> PubKey .
	op r20 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> CertTypes .
	op r2 : -> PubKey .
	op r20 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkChangeCS(s, r1, r2), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuites .
	op r6 : -> PqKemParams .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkChello(s, r1, r2, r3, r4, r5, r6), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkChello2(s, r1, r2, r3, r4, r5, r6), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (priClKey(r3) \in uclk(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCkeyex(s, r1, r2, r3, r4), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (priClKey(r3) \in uclk(s)) = false .
	eq (priPqKey(r4) \in upqk(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCkeyex(s, r1, r2, r3, r4), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (priClKey(r3) \in uclk(s)) = false .
	eq (priPqKey(r4) \in upqk(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCkeyex(s, r1, r2, r3, r4), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCkeyex2(s, r1, r2, r3, r4), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCkeyex2(s, r1, r2, r3, r4), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkCkeyex2(s, r1, r2, r3, r4), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in cesfin2(nw(s))) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinish2a(s, r1, r2, r3), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in cesfin2(nw(s))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinish2a(s, r1, r2, r3), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r8)) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> ClPubKeyEx .
	op r11 : -> PqPubKeyEn .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuites .
	op r7 : -> Rand .
	op r8 : -> Pms .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq existPqPriKexM(pmsPqKey(r8), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r8), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r8)) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinish2b(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in cesfin(nw(s))) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinisha(s, r1, r2, r3), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Cipher .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in cesfin(nw(s))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinisha(s, r1, r2, r3), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> CertTypes .
	op r2 : -> PubKey .
	op r20 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> CertTypes .
	op r2 : -> PubKey .
	op r20 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> CertTypes .
	op r2 : -> PubKey .
	op r20 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> CertTypes .
	op r2 : -> PubKey .
	op r20 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> CertTypes .
	op r2 : -> PubKey .
	op r20 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> CertTypes .
	op r2 : -> PubKey .
	op r20 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> CertTypes .
	op r2 : -> PubKey .
	op r20 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> CertTypes .
	op r2 : -> PubKey .
	op r20 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> CertTypes .
	op r2 : -> PubKey .
	op r20 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> CertTypes .
	op r2 : -> PubKey .
	op r20 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in csign(nw(s))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishb(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = true .
	eq (r3 \in csign(nw(s))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = true .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = true .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(getPms(getMs(r19)))) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = true .
	eq existPqPriKexM(pmsPqKey(getPms(getMs(r19))), nw(s)) = false .
	eq existClPriKexM(pmsClKey(getPms(getMs(r19))), nw(s)) = false .
	eq (clKeyPri(pmsClKey(getPms(getMs(r19)))) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = true .
	eq (pqKeyPri(pmsPqKey(r1)) \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = true .
	eq existPqPriKexM(pmsPqKey(r1), nw(s)) = false .
	eq existClPriKexM(pmsClKey(r1), nw(s)) = false .
	eq (clKeyPri(pmsClKey(r1)) \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = true .
	eq (r5 \in csign(nw(s))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Pms .
	op r10 : -> CipherSuites .
	op r11 : -> PqKemParams .
	op r12 : -> Rand .
	op r13 : -> CipherSuite .
	op r14 : -> Sid .
	op r15 : -> ClPubKeyEx .
	op r16 : -> PqPubKeyEn .
	op r17 : -> ClPubKeyEx .
	op r18 : -> PqPubKeyEn .
	op r19 : -> Key .
	op r2 : -> PubKey .
	op r20 : -> CertTypes .
	op r21 : -> SignAlgs .
	op r3 : -> Sign .
	op r4 : -> PubKey .
	op r5 : -> Sign .
	op r6 : -> Prin .
	op r7 : -> Prin .
	op r8 : -> Version .
	op r9 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r19 \in hskLeaked(s)) = false .
	eq (r3 \in csign(nw(s))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSfinishc(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> CipherSuite .
	op r6 : -> Sid .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkShello(s, r1, r2, r3, r4, r5, r6), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Version .
	op r4 : -> Rand .
	op r5 : -> Sid .
	op r6 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkShello2(s, r1, r2, r3, r4, r5, r6), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkShelloDone(s, r1, r2), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (priClKey(r3) \in uclk(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSkeyex(s, r1, r2, r3, r4, r5, r6), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (priClKey(r3) \in uclk(s)) = false .
	eq (priPqKey(r4) \in upqk(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSkeyex(s, r1, r2, r3, r4, r5, r6), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	eq (priClKey(r3) \in uclk(s)) = false .
	eq (priPqKey(r4) \in upqk(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSkeyex(s, r1, r2, r3, r4, r5, r6), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPubKeyEx .
	op r4 : -> PqPubKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSkeyex(s, r1, r2, r3, r4, r5, r6), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSkeyex2(s, r1, r2, r3, r4, r5, r6), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = true .
	eq (r4 \in pqkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSkeyex2(s, r1, r2, r3, r4, r5, r6), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> ClPriKeyEx .
	op r4 : -> PqPriKeyEn .
	op r5 : -> Rand .
	op r6 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r3 \in clkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(fkSkeyex2(s, r1, r2, r3, r4, r5, r6), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(helloReq(s, r1, r2), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Key .
	op r4 : -> FinVD .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (cfM(r1, r1, r2, encFin(r3, r4)) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(leakHsK(s, r1, r2, r3, r4), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Key .
	op r4 : -> FinVD .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (cfM(r1, r1, r2, encFin(r3, r4)) \in nw(s)) = false .
	eq (sfM(r1, r1, r2, encFin(r3, r4)) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(leakHsK(s, r1, r2, r3, r4), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Key .
	op r4 : -> FinVD .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (cfM(r1, r1, r2, encFin(r3, r4)) \in nw(s)) = false .
	eq (sfM(r1, r1, r2, encFin(r3, r4)) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(leakHsK(s, r1, r2, r3, r4), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (priKey(r1) \in' ltkLeaked(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(leakLtK(s, r1), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (priKey(r1) \in' ltkLeaked(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(leakLtK(s, r1), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKeyEn .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (skexM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(leakPKE1(s, r1, r2, r3, r4, r5, r6, r7), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKeyEn .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (skexM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(leakPKE1(s, r1, r2, r3, r4, r5, r6, r7), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKeyEn .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (skexM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(leakPKE2(s, r1, r2, r3, r4, r5, r6, r7), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKeyEn .
	op r6 : -> Cipher .
	op r7 : -> Nat .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (skexM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(leakPKE2(s, r1, r2, r3, r4, r5, r6, r7), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKeyEn .
	op r6 : -> Nat .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(leakPKE3(s, r1, r2, r3, r4, r5, r6), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKeyEn .
	op r6 : -> Nat .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(leakPKE3(s, r1, r2, r3, r4, r5, r6), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKeyEn .
	op r6 : -> Nat .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1, r2, r3, r4, r5, r6) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(leakPKE4(s, r1, r2, r3, r4, r5, r6), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> ClPubKeyEx .
	op r5 : -> PqPubKeyEn .
	op r6 : -> Nat .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ckexM(r1, r2, r3, r4, r5, r6) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(leakPKE4(s, r1, r2, r3, r4, r5, r6), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (certVerM(r22, r2, r3, r23, r24) \in nw(s)) = true .
	eq (cfM(r25, r2, r3, r26) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (ckexM(r18, r2, r3, r19, r20, r21) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca, owner(r17), pubKey(r17)) .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r26, prf-ckey(prf-ms(pms(classicKey(r19, r11), pqKey(r20, r12, r13)), seedMs(r5, r8, r19, r20)), seedHs(r5, r8))) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = true .
	eq decH(r23, pubKey(r17)) = hFullHs(r2, r3, r4, r5, r6, r7, r8, r9, r10, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r14, r15, r17, r19, r20) .
	eq decFin(r26, prf-ckey(prf-ms(pms(classicKey(r19, r11), pqKey(r20, r12, r13)), seedMs(r5, r8, r19, r20)), seedHs(r5, r8))) = prf-cfin(prf-ms(pms(classicKey(r19, r11), pqKey(r20, r12, r13)), seedMs(r5, r8, r19, r20)), hFullHs(r2, r3, r4, r5, r6, r7, r8, r9, r10, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r14, r15, r17, r19, r20)) .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (certVerM(r22, r2, r3, r23, r24) \in nw(s)) = true .
	eq (cfM(r25, r2, r3, r26) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (ckexM(r18, r2, r3, r19, r20, r21) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca, owner(r17), pubKey(r17)) .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r26, prf-ckey(prf-ms(pms(classicKey(r19, r11), pqKey(r20, r12, r13)), seedMs(r5, r8, r19, r20)), seedHs(r5, r8))) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = true .
	eq decH(r23, pubKey(r17)) = hFullHs(r2, r3, r4, r5, r6, r7, r8, r9, r10, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r14, r15, r17, r19, r20) .
	eq (decFin(r26, prf-ckey(prf-ms(pms(classicKey(r19, r11), pqKey(r20, r12, r13)), seedMs(r5, r8, r19, r20)), seedHs(r5, r8))) = prf-cfin(prf-ms(pms(classicKey(r19, r11), pqKey(r20, r12, r13)), seedMs(r5, r8, r19, r20)), hFullHs(r2, r3, r4, r5, r6, r7, r8, r9, r10, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r14, r15, r17, r19, r20))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (certVerM(r22, r2, r3, r23, r24) \in nw(s)) = true .
	eq (cfM(r25, r2, r3, r26) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (ckexM(r18, r2, r3, r19, r20, r21) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca, owner(r17), pubKey(r17)) .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r26, prf-ckey(prf-ms(pms(classicKey(r19, r11), pqKey(r20, r12, r13)), seedMs(r5, r8, r19, r20)), seedHs(r5, r8))) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = true .
	eq (decH(r23, pubKey(r17)) = hFullHs(r2, r3, r4, r5, r6, r7, r8, r9, r10, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r14, r15, r17, r19, r20)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (certVerM(r22, r2, r3, r23, r24) \in nw(s)) = true .
	eq (cfM(r25, r2, r3, r26) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (ckexM(r18, r2, r3, r19, r20, r21) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca, owner(r17), pubKey(r17)) .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r26, prf-ckey(prf-ms(pms(classicKey(r19, r11), pqKey(r20, r12, r13)), seedMs(r5, r8, r19, r20)), seedHs(r5, r8))) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (certVerM(r22, r2, r3, r23, r24) \in nw(s)) = true .
	eq (cfM(r25, r2, r3, r26) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (ckexM(r18, r2, r3, r19, r20, r21) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca, owner(r17), pubKey(r17)) .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r26, prf-ckey(prf-ms(pms(classicKey(r19, r11), pqKey(r20, r12, r13)), seedMs(r5, r8, r19, r20)), seedHs(r5, r8))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (certVerM(r22, r2, r3, r23, r24) \in nw(s)) = true .
	eq (cfM(r25, r2, r3, r26) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (ckexM(r18, r2, r3, r19, r20, r21) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca, owner(r17), pubKey(r17)) .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (certVerM(r22, r2, r3, r23, r24) \in nw(s)) = true .
	eq (cfM(r25, r2, r3, r26) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (ckexM(r18, r2, r3, r19, r20, r21) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (sign(r17) = sign(ca, owner(r17), pubKey(r17))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (certVerM(r22, r2, r3, r23, r24) \in nw(s)) = true .
	eq (cfM(r25, r2, r3, r26) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (ckexM(r18, r2, r3, r19, r20, r21) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (certVerM(r22, r2, r3, r23, r24) \in nw(s)) = true .
	eq (cfM(r25, r2, r3, r26) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (ckexM(r18, r2, r3, r19, r20, r21) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (certVerM(r22, r2, r3, r23, r24) \in nw(s)) = true .
	eq (cfM(r25, r2, r3, r26) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (certVerM(r22, r2, r3, r23, r24) \in nw(s)) = true .
	eq (cfM(r25, r2, r3, r26) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (certVerM(r22, r2, r3, r23, r24) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sChangeCS(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq ss(s, r2, r3, r6) = none .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r2, r3, r6) = none) = false .
	eq (ch2M(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (sh2M(r3, r3, r2, r4, r8, r6, cs(ss(s, r2, r3, r6))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r2, r3, r6) = none) = false .
	eq (ch2M(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (sh2M(r3, r3, r2, r4, r8, r6, cs(ss(s, r2, r3, r6))) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r2, r3, r6) = none) = false .
	eq (ch2M(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sChangeCS2(s, r1, r2, r3, r4, r5, r6, r7, r8), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(scert(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(scert(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(scert(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (certVerM(r22, r2, r3, r23, r24) \in nw(s)) = true .
	eq (cfM(r25, r2, r3, r26) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (ckexM(r18, r2, r3, r19, r20, r21) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca, owner(r17), pubKey(r17)) .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r26, prf-ckey(prf-ms(pms(classicKey(r19, r11), pqKey(r20, r12, r13)), seedMs(r5, r8, r19, r20)), seedHs(r5, r8))) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = true .
	eq decH(r23, pubKey(r17)) = hFullHs(r2, r3, r4, r5, r6, r7, r8, r9, r10, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r14, r15, r17, r19, r20) .
	eq decFin(r26, prf-ckey(prf-ms(pms(classicKey(r19, r11), pqKey(r20, r12, r13)), seedMs(r5, r8, r19, r20)), seedHs(r5, r8))) = prf-cfin(prf-ms(pms(classicKey(r19, r11), pqKey(r20, r12, r13)), seedMs(r5, r8, r19, r20)), hFullHs(r2, r3, r4, r5, r6, r7, r8, r9, r10, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r14, r15, r17, r19, r20)) .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (certVerM(r22, r2, r3, r23, r24) \in nw(s)) = true .
	eq (cfM(r25, r2, r3, r26) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (ckexM(r18, r2, r3, r19, r20, r21) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca, owner(r17), pubKey(r17)) .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r26, prf-ckey(prf-ms(pms(classicKey(r19, r11), pqKey(r20, r12, r13)), seedMs(r5, r8, r19, r20)), seedHs(r5, r8))) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = true .
	eq decH(r23, pubKey(r17)) = hFullHs(r2, r3, r4, r5, r6, r7, r8, r9, r10, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r14, r15, r17, r19, r20) .
	eq (decFin(r26, prf-ckey(prf-ms(pms(classicKey(r19, r11), pqKey(r20, r12, r13)), seedMs(r5, r8, r19, r20)), seedHs(r5, r8))) = prf-cfin(prf-ms(pms(classicKey(r19, r11), pqKey(r20, r12, r13)), seedMs(r5, r8, r19, r20)), hFullHs(r2, r3, r4, r5, r6, r7, r8, r9, r10, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r14, r15, r17, r19, r20))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (certVerM(r22, r2, r3, r23, r24) \in nw(s)) = true .
	eq (cfM(r25, r2, r3, r26) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (ckexM(r18, r2, r3, r19, r20, r21) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca, owner(r17), pubKey(r17)) .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r26, prf-ckey(prf-ms(pms(classicKey(r19, r11), pqKey(r20, r12, r13)), seedMs(r5, r8, r19, r20)), seedHs(r5, r8))) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = true .
	eq (decH(r23, pubKey(r17)) = hFullHs(r2, r3, r4, r5, r6, r7, r8, r9, r10, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3))), clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r14, r15, r17, r19, r20)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (certVerM(r22, r2, r3, r23, r24) \in nw(s)) = true .
	eq (cfM(r25, r2, r3, r26) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (ckexM(r18, r2, r3, r19, r20, r21) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca, owner(r17), pubKey(r17)) .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r26, prf-ckey(prf-ms(pms(classicKey(r19, r11), pqKey(r20, r12, r13)), seedMs(r5, r8, r19, r20)), seedHs(r5, r8))) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (certVerM(r22, r2, r3, r23, r24) \in nw(s)) = true .
	eq (cfM(r25, r2, r3, r26) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (ckexM(r18, r2, r3, r19, r20, r21) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca, owner(r17), pubKey(r17)) .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq decSym?(r26, prf-ckey(prf-ms(pms(classicKey(r19, r11), pqKey(r20, r12, r13)), seedMs(r5, r8, r19, r20)), seedHs(r5, r8))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (certVerM(r22, r2, r3, r23, r24) \in nw(s)) = true .
	eq (cfM(r25, r2, r3, r26) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (ckexM(r18, r2, r3, r19, r20, r21) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq sign(r17) = sign(ca, owner(r17), pubKey(r17)) .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (certVerM(r22, r2, r3, r23, r24) \in nw(s)) = true .
	eq (cfM(r25, r2, r3, r26) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (ckexM(r18, r2, r3, r19, r20, r21) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (sign(r17) = sign(ca, owner(r17), pubKey(r17))) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (certVerM(r22, r2, r3, r23, r24) \in nw(s)) = true .
	eq (cfM(r25, r2, r3, r26) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (ckexM(r18, r2, r3, r19, r20, r21) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (certVerM(r22, r2, r3, r23, r24) \in nw(s)) = true .
	eq (cfM(r25, r2, r3, r26) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (ckexM(r18, r2, r3, r19, r20, r21) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (certVerM(r22, r2, r3, r23, r24) \in nw(s)) = true .
	eq (cfM(r25, r2, r3, r26) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (certVerM(r22, r2, r3, r23, r24) \in nw(s)) = true .
	eq (cfM(r25, r2, r3, r26) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (certVerM(r22, r2, r3, r23, r24) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = true .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = true .
	eq (ccertM(r16, r2, r3, r17) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (shDnM(r3, r3, r2) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = true .
	eq (ccsM(r3, r3, r2) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r16 : -> Prin .
	op r17 : -> Cert .
	op r18 : -> Prin .
	op r19 : -> ClPubKeyEx .
	op r2 : -> Prin .
	op r20 : -> PqPubKeyEn .
	op r21 : -> Nat .
	op r22 : -> Prin .
	op r23 : -> Cipher .
	op r24 : -> Nat .
	op r25 : -> Prin .
	op r26 : -> Cipher .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq decAsym?(r23, pubKey(r17)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sfinish(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq ss(s, r2, r3, r6) = none .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r2, r3, r6) = none) = false .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (ch2M(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (sh2M(r3, r3, r2, r4, r8, r6, cs(ss(s, r2, r3, r6))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r2, r3, r6) = none) = false .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (ch2M(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (sh2M(r3, r3, r2, r4, r8, r6, cs(ss(s, r2, r3, r6))) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r2, r3, r6) = none) = false .
	eq (ccsM(r3, r3, r2) \in nw(s)) = true .
	eq (ch2M(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> Sid .
	op r7 : -> CipherSuites .
	op r8 : -> Rand .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r2, r3, r6) = none) = false .
	eq (ccsM(r3, r3, r2) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(sfinish2(s, r1, r2, r3, r4, r5, r6, r7, r8), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(shello(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(shello(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = false .
	eq (chM(r4, r5, r6, r7, r8, r9, r10) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(shello(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in r9) = true .
	eq (r1 \in ur(s)) = false .
	eq (r3 \in ui(s)) = false .
	eq (chM(r4, r5, r6, r7, r8, r9, r10) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(shello(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Rand .
	op r10 : -> PqKemParams .
	op r2 : -> CipherSuite .
	op r3 : -> Sid .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Prin .
	op r7 : -> Version .
	op r8 : -> Rand .
	op r9 : -> CipherSuites .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r2 \in r9) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(shello(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq ss(s, r3, r4, r7) = none .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(shello2(s, r1, r2, r3, r4, r5, r6, r7, r8), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r3, r4, r7) = none) = false .
	eq (r1 \in ur(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(shello2(s, r1, r2, r3, r4, r5, r6, r7, r8), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r3, r4, r7) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s, r3, r4, r7)) \in r8) = true .
	eq (ch2M(r2, r3, r4, r5, r6, r7, r8) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(shello2(s, r1, r2, r3, r4, r5, r6, r7, r8), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r3, r4, r7) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s, r3, r4, r7)) \in r8) = true .
	eq (ch2M(r2, r3, r4, r5, r6, r7, r8) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(shello2(s, r1, r2, r3, r4, r5, r6, r7, r8), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Rand .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Version .
	op r6 : -> Rand .
	op r7 : -> Sid .
	op r8 : -> CipherSuites .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (ss(s, r3, r4, r7) = none) = false .
	eq (r1 \in ur(s)) = false .
	eq (cs(ss(s, r3, r4, r7)) \in r8) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(shello2(s, r1, r2, r3, r4, r5, r6, r7, r8), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(shelloDone(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = true .
	eq (skexM(r3, r3, r2, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3), encH(priKey(r3), hParams(r5, r8, clPubKeyEx(r11, r3), pqPubKeyEn(r12, r3))), r13) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(shelloDone(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = true .
	eq (scertM(r3, r3, r2, cert(r3, pubKey(r3), sign(ca, r3, pubKey(r3)))) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(shelloDone(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = true .
	eq (shM(r3, r3, r2, r4, r8, r9, r10) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(shelloDone(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = true .
	eq (chM(r1, r2, r3, r4, r5, r6, r7) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(shelloDone(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> Prin .
	op r10 : -> Sid .
	op r11 : -> ClPriKeyEx .
	op r12 : -> PqPriKeyEn .
	op r13 : -> Nat .
	op r14 : -> CertTypes .
	op r15 : -> SignAlgs .
	op r2 : -> Prin .
	op r3 : -> Prin .
	op r4 : -> Version .
	op r5 : -> Rand .
	op r6 : -> CipherSuites .
	op r7 : -> PqKemParams .
	op r8 : -> Rand .
	op r9 : -> CipherSuite .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (certReqM(r3, r3, r2, r14, r15) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(shelloDone(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKeyEn .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKeyEn .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKeyEn .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3, r4, r5, r6, r7, r8, r9) \in nw(s)) = true .
	eq (shM(r5, r5, r4, r6, r10, r11, r12) \in nw(s)) = true .
	eq (scertM(r5, r5, r4, cert(r5, pubKey(r5), sign(ca, r5, pubKey(r5)))) \in nw(s)) = true .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKeyEn .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3, r4, r5, r6, r7, r8, r9) \in nw(s)) = true .
	eq (shM(r5, r5, r4, r6, r10, r11, r12) \in nw(s)) = true .
	eq (scertM(r5, r5, r4, cert(r5, pubKey(r5), sign(ca, r5, pubKey(r5)))) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKeyEn .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3, r4, r5, r6, r7, r8, r9) \in nw(s)) = true .
	eq (shM(r5, r5, r4, r6, r10, r11, r12) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> true 
open INV .
	op a : -> Prin .
	op a1 : -> Prin .
	op b : -> Prin .
	op h : -> Hash .
	op k' : -> PqPriKeyEn .
	op kc : -> ClassicKey .
	op n : -> Nat .
	op pk' : -> PqPubKeyEn .
	op r1 : -> ClPriKeyEx .
	op r10 : -> Rand .
	op r11 : -> CipherSuite .
	op r12 : -> Sid .
	op r2 : -> PqPriKeyEn .
	op r3 : -> Prin .
	op r4 : -> Prin .
	op r5 : -> Prin .
	op r6 : -> Version .
	op r7 : -> Rand .
	op r8 : -> CipherSuites .
	op r9 : -> PqKemParams .
	op s : -> Sys .
	op sd1 : -> Seed .
	op sd2 : -> Seed .
	eq (r1 \in uclk(s)) = false .
	eq (r2 \in upqk(s)) = false .
	eq (chM(r3, r4, r5, r6, r7, r8, r9) \in nw(s)) = false .
	red inv34(s, a, b, a1, kc, pk', k', sd1, sd2, h, n) implies inv34(skeyex(s, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12), a, b, a1, kc, pk', k', sd1, sd2, h, n) .
close

--> Time taken is 31495ms